<Type Name="CoreWebView2NewWindowRequestedEventArgs" FullName="Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs">
  <TypeSignature Language="C#" Value="public class CoreWebView2NewWindowRequestedEventArgs" FrameworkAlternate="WebView2-dotnet-0.9.515-prerelease;WebView2-dotnet-0.9.538-prerelease;WebView2-dotnet-0.9.579-prerelease;WebView2-dotnet-0.9.628-prerelease" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CoreWebView2NewWindowRequestedEventArgs extends System.Object" FrameworkAlternate="WebView2-dotnet-0.9.515-prerelease;WebView2-dotnet-0.9.538-prerelease;WebView2-dotnet-0.9.579-prerelease;WebView2-dotnet-0.9.628-prerelease" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CoreWebView2NewWindowRequestedEventArgs" FrameworkAlternate="WebView2-dotnet-0.9.515-prerelease;WebView2-dotnet-0.9.538-prerelease;WebView2-dotnet-0.9.579-prerelease;WebView2-dotnet-0.9.628-prerelease" />
  <TypeSignature Language="F#" Value="type CoreWebView2NewWindowRequestedEventArgs = class" FrameworkAlternate="WebView2-dotnet-0.9.515-prerelease;WebView2-dotnet-0.9.538-prerelease;WebView2-dotnet-0.9.579-prerelease;WebView2-dotnet-0.9.628-prerelease" />
  <TypeSignature Language="C#" Value="public class CoreWebView2NewWindowRequestedEventArgs : EventArgs" FrameworkAlternate="WebView2-dotnet-1.0.664.37;WebView2-dotnet-1.0.721-prerelease" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CoreWebView2NewWindowRequestedEventArgs extends System.EventArgs" FrameworkAlternate="WebView2-dotnet-1.0.664.37;WebView2-dotnet-1.0.721-prerelease" />
  <TypeSignature Language="VB.NET" Value="Public Class CoreWebView2NewWindowRequestedEventArgs&#xA;Inherits EventArgs" FrameworkAlternate="WebView2-dotnet-1.0.664.37;WebView2-dotnet-1.0.721-prerelease" />
  <TypeSignature Language="F#" Value="type CoreWebView2NewWindowRequestedEventArgs = class&#xA;    inherit EventArgs" FrameworkAlternate="WebView2-dotnet-1.0.664.37;WebView2-dotnet-1.0.721-prerelease" />
  <TypeSignature Language="C#" Value="public class CoreWebView2NewWindowRequestedEventArgs : System.ComponentModel.HandledEventArgs" FrameworkAlternate="WebView2-dotnet-1.0.674-prerelease" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CoreWebView2NewWindowRequestedEventArgs extends System.ComponentModel.HandledEventArgs" FrameworkAlternate="WebView2-dotnet-1.0.674-prerelease" />
  <TypeSignature Language="VB.NET" Value="Public Class CoreWebView2NewWindowRequestedEventArgs&#xA;Inherits HandledEventArgs" FrameworkAlternate="WebView2-dotnet-1.0.674-prerelease" />
  <TypeSignature Language="F#" Value="type CoreWebView2NewWindowRequestedEventArgs = class&#xA;    inherit HandledEventArgs" FrameworkAlternate="WebView2-dotnet-1.0.674-prerelease" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Web.WebView2.Core</AssemblyName>
    <AssemblyVersion>0.0.0.0</AssemblyVersion>
    <AssemblyVersion>0.9.628.0</AssemblyVersion>
    <AssemblyVersion>1.0.664.37</AssemblyVersion>
    <AssemblyVersion>1.0.674.0</AssemblyVersion>
    <AssemblyVersion>1.0.721.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
    <BaseTypeName FrameworkAlternate="WebView2-dotnet-1.0.664.37;WebView2-dotnet-1.0.721-prerelease">System.EventArgs</BaseTypeName>
    <BaseTypeName FrameworkAlternate="WebView2-dotnet-1.0.674-prerelease">System.ComponentModel.HandledEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Event args for the <see cref="E:Microsoft.Web.WebView2.Core.CoreWebView2.NewWindowRequested" /> event.
            </summary>
    <remarks>
            The event is fired when content inside WebView requested to a open a new window (through window.open() and so on.)
            </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetDeferral">
      <MemberSignature Language="C#" Value="public Microsoft.Web.WebView2.Core.CoreWebView2Deferral GetDeferral ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Web.WebView2.Core.CoreWebView2Deferral GetDeferral() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.GetDeferral" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDeferral () As CoreWebView2Deferral" />
      <MemberSignature Language="F#" Value="member this.GetDeferral : unit -&gt; Microsoft.Web.WebView2.Core.CoreWebView2Deferral" Usage="coreWebView2NewWindowRequestedEventArgs.GetDeferral " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Web.WebView2.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.628.0</AssemblyVersion>
        <AssemblyVersion>1.0.664.37</AssemblyVersion>
        <AssemblyVersion>1.0.674.0</AssemblyVersion>
        <AssemblyVersion>1.0.721.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Web.WebView2.Core.CoreWebView2Deferral</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Gets a <see cref="T:Microsoft.Web.WebView2.Core.CoreWebView2Deferral" /> object and put the event into a deferred state.
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Use this to <see cref="M:Microsoft.Web.WebView2.Core.CoreWebView2Deferral.Complete" /> the window open request at a later time. While this event is deferred the opener window returns a WindowProxy to an un-navigated window, which navigates when the deferral is complete.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Web.WebView2.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.628.0</AssemblyVersion>
        <AssemblyVersion>1.0.664.37</AssemblyVersion>
        <AssemblyVersion>1.0.721.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Indicates whether the <see cref="E:Microsoft.Web.WebView2.Core.CoreWebView2.NewWindowRequested" /> event is handled by host.
            </summary>
        <value>To be added.</value>
        <remarks>
            If this is <c>false</c> and no <see cref="P:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.NewWindow" /> is set, the WebView opens a popup window and it returns as opened WindowProxy. If set to <c>true</c> and no <see cref="P:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.NewWindow" /> is set for <c>window.open()</c>, the opened WindowProxy is for a dummy window object and no window loads. The default value is <c>false</c>.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUserInitiated">
      <MemberSignature Language="C#" Value="public bool IsUserInitiated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUserInitiated" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.IsUserInitiated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUserInitiated As Boolean" />
      <MemberSignature Language="F#" Value="member this.IsUserInitiated : bool" Usage="Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.IsUserInitiated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Web.WebView2.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.628.0</AssemblyVersion>
        <AssemblyVersion>1.0.664.37</AssemblyVersion>
        <AssemblyVersion>1.0.674.0</AssemblyVersion>
        <AssemblyVersion>1.0.721.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <c>true</c> when the new window request was initiated through a user gesture such as selecting an anchor tag with target.
            </summary>
        <value>To be added.</value>
        <remarks>
            The Microsoft Edge popup blocker is disabled for WebView so the app is able to use this flag to block non-user initiated popups.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewWindow">
      <MemberSignature Language="C#" Value="public Microsoft.Web.WebView2.Core.CoreWebView2 NewWindow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Web.WebView2.Core.CoreWebView2 NewWindow" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.NewWindow" />
      <MemberSignature Language="VB.NET" Value="Public Property NewWindow As CoreWebView2" />
      <MemberSignature Language="F#" Value="member this.NewWindow : Microsoft.Web.WebView2.Core.CoreWebView2 with get, set" Usage="Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.NewWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Web.WebView2.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.628.0</AssemblyVersion>
        <AssemblyVersion>1.0.664.37</AssemblyVersion>
        <AssemblyVersion>1.0.674.0</AssemblyVersion>
        <AssemblyVersion>1.0.721.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Web.WebView2.Core.CoreWebView2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the new window or sets a WebView as a result of the new window requested.
            </summary>
        <value>To be added.</value>
        <remarks>
            Provides a WebView as the target for a window.open() from inside the requesting WebView. If this is set, the top-level window returns as the opened WindowProxy. If this is not set, then <see cref="P:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.Handled" /> is checked to determine behavior for the <see cref="E:Microsoft.Web.WebView2.Core.CoreWebView2.NewWindowRequested" />. WebView provided in the NewWindow property must be on the same <see cref="T:Microsoft.Web.WebView2.Core.CoreWebView2Environment" /> as the opener WebView and cannot be navigated.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="Uri">
      <MemberSignature Language="C#" Value="public string Uri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Uri" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.Uri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Uri As String" />
      <MemberSignature Language="F#" Value="member this.Uri : string" Usage="Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.Uri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Web.WebView2.Core</AssemblyName>
        <AssemblyVersion>0.0.0.0</AssemblyVersion>
        <AssemblyVersion>0.9.628.0</AssemblyVersion>
        <AssemblyVersion>1.0.664.37</AssemblyVersion>
        <AssemblyVersion>1.0.674.0</AssemblyVersion>
        <AssemblyVersion>1.0.721.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the target uri of the new window request.
            </summary>
        <value>To be added.</value>
        <remarks>
            The target WebView should not be navigated. If the NewWindow is set, its top level window will return as the opened WindowProxy.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowFeatures">
      <MemberSignature Language="C#" Value="public Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures WindowFeatures { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures WindowFeatures" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.WindowFeatures" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WindowFeatures As CoreWebView2WindowFeatures" />
      <MemberSignature Language="F#" Value="member this.WindowFeatures : Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures" Usage="Microsoft.Web.WebView2.Core.CoreWebView2NewWindowRequestedEventArgs.WindowFeatures" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Web.WebView2.Core</AssemblyName>
        <AssemblyVersion>0.9.628.0</AssemblyVersion>
        <AssemblyVersion>1.0.664.37</AssemblyVersion>
        <AssemblyVersion>1.0.674.0</AssemblyVersion>
        <AssemblyVersion>1.0.721.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Web.WebView2.Core.CoreWebView2WindowFeatures</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the window features specified by the <c>window.open()</c> call. These features should be considered for positioning and sizing of new WebView windows.
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
