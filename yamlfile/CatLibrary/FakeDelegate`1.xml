<Type Name="FakeDelegate&lt;T&gt;" FullName="CatLibrary.FakeDelegate&lt;T&gt;">
  <TypeSignature Language="C#" Value="public delegate int FakeDelegate&lt;out T&gt;(long num, string name, params object[] scores);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed FakeDelegate`1&lt;+ T&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:CatLibrary.FakeDelegate`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function FakeDelegate(Of Out T)(num As Long, name As String, ParamArray scores As Object()) As Integer " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public delegate int FakeDelegate(long num, System::String ^ name, ... cli::array &lt;System::Object ^&gt; ^ scores);" />
  <TypeSignature Language="F#" Value="type FakeDelegate&lt;'T&gt; = delegate of int64 * string * obj[] -&gt; int" />
  <AssemblyInfo>
    <AssemblyName>CatLibrary</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="num" Type="System.Int64" />
    <Parameter Name="name" Type="System.String" />
    <Parameter Name="scores" Type="System.Object[]">
      <Attributes>
        <Attribute FrameworkAlternate="cat-1.0">
          <AttributeName Language="C#">[System.ParamArray]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </Parameter>
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Int32</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <param name="num">To be added.</param>
    <param name="name">To be added.</param>
    <param name="scores">To be added.</param>
    <summary>To be added.</summary>
    <returns>To be added.</returns>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
