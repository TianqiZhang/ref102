<Type Name="IConnectorClientBuilder" FullName="Microsoft.Bot.Builder.OAuth.IConnectorClientBuilder">
  <TypeSignature Language="C#" Value="public interface IConnectorClientBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IConnectorClientBuilder" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.OAuth.IConnectorClientBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Interface IConnectorClientBuilder" />
  <TypeSignature Language="F#" Value="type IConnectorClientBuilder = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
            Abstraction to build connector clients.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CreateConnectorClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IConnectorClient&gt; CreateConnectorClientAsync (string serviceUrl, System.Security.Claims.ClaimsIdentity claimsIdentity, string audience, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Connector.IConnectorClient&gt; CreateConnectorClientAsync(string serviceUrl, class System.Security.Claims.ClaimsIdentity claimsIdentity, string audience, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.OAuth.IConnectorClientBuilder.CreateConnectorClientAsync(System.String,System.Security.Claims.ClaimsIdentity,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateConnectorClientAsync (serviceUrl As String, claimsIdentity As ClaimsIdentity, audience As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of IConnectorClient)" />
      <MemberSignature Language="F#" Value="abstract member CreateConnectorClientAsync : string * System.Security.Claims.ClaimsIdentity * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IConnectorClient&gt;" Usage="iConnectorClientBuilder.CreateConnectorClientAsync (serviceUrl, claimsIdentity, audience, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Connector.IConnectorClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceUrl" Type="System.String" />
        <Parameter Name="claimsIdentity" Type="System.Security.Claims.ClaimsIdentity" />
        <Parameter Name="audience" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="serviceUrl">The service URL.</param>
        <param name="claimsIdentity">The claims claimsIdentity.</param>
        <param name="audience">The target audience for the connector.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Creates the connector client asynchronous.
            </summary>
        <returns>ConnectorClient instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">ClaimsIdentity cannot be null. Pass Anonymous ClaimsIdentity if authentication is turned off.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
