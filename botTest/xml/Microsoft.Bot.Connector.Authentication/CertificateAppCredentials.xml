<Type Name="CertificateAppCredentials" FullName="Microsoft.Bot.Connector.Authentication.CertificateAppCredentials">
  <TypeSignature Language="C#" Value="public class CertificateAppCredentials : Microsoft.Bot.Connector.Authentication.AppCredentials" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CertificateAppCredentials extends Microsoft.Bot.Connector.Authentication.AppCredentials" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" />
  <TypeSignature Language="VB.NET" Value="Public Class CertificateAppCredentials&#xA;Inherits AppCredentials" />
  <TypeSignature Language="F#" Value="type CertificateAppCredentials = class&#xA;    inherit AppCredentials" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Connector.Authentication.AppCredentials</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            CertificateAppCredentials auth implementation and cache.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (Microsoft.Bot.Connector.Authentication.CertificateAppCredentialsOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.Authentication.CertificateAppCredentialsOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(Microsoft.Bot.Connector.Authentication.CertificateAppCredentialsOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (options As CertificateAppCredentialsOptions)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : Microsoft.Bot.Connector.Authentication.CertificateAppCredentialsOptions -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials options" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="options" Type="Microsoft.Bot.Connector.Authentication.CertificateAppCredentialsOptions" />
      </Parameters>
      <Docs>
        <param name="options">Options for this CertificateAppCredentials.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, string channelAuthTenant = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As ClientAssertionCertificate, Optional channelAuthTenant As String = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Client certificate to be presented for authentication.</param>
        <param name="channelAuthTenant">Optional. The oauth token tenant.</param>
        <param name="customHttpClient">Optional <see cref="T:System.Net.Http.HttpClient" /> to be used when acquiring tokens.</param>
        <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to gather telemetry data while acquiring and managing credentials.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, bool sendX5c, string channelAuthTenant = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate clientCertificate, bool sendX5c, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate,System.Boolean,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As ClientAssertionCertificate, sendX5c As Boolean, Optional channelAuthTenant As String = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate * bool * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, sendX5c, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="Microsoft.IdentityModel.Clients.ActiveDirectory.ClientAssertionCertificate" />
        <Parameter Name="sendX5c" Type="System.Boolean" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Client certificate to be presented for authentication.</param>
        <param name="sendX5c">This parameter, if true, enables application developers to achieve easy certificates roll-over in Azure AD: setting this parameter to true will send the public certificate to Azure AD along with the token request, so that Azure AD can use it to validate the subject name based on a trusted issuer policy. </param>
        <param name="channelAuthTenant">Optional. The oauth token tenant.</param>
        <param name="customHttpClient">Optional <see cref="T:System.Net.Http.HttpClient" /> to be used when acquiring tokens.</param>
        <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to gather telemetry data while acquiring and managing credentials.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, string appId, string channelAuthTenant = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, string appId, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As X509Certificate2, appId As String, Optional channelAuthTenant As String = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * string * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, appId, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Client certificate to be presented for authentication.</param>
        <param name="appId">Microsoft application Id related to the certifiacte.</param>
        <param name="channelAuthTenant">Optional. The oauth token tenant.</param>
        <param name="customHttpClient">Optional <see cref="T:System.Net.Http.HttpClient" /> to be used when acquiring tokens.</param>
        <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to gather telemetry data while acquiring and managing credentials.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CertificateAppCredentials (System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, bool sendX5c, string appId, string channelAuthTenant = default, System.Net.Http.HttpClient customHttpClient = default, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 clientCertificate, bool sendX5c, string appId, string channelAuthTenant, class System.Net.Http.HttpClient customHttpClient, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2,System.Boolean,System.String,System.String,System.Net.Http.HttpClient,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (clientCertificate As X509Certificate2, sendX5c As Boolean, appId As String, Optional channelAuthTenant As String = Nothing, Optional customHttpClient As HttpClient = Nothing, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials : System.Security.Cryptography.X509Certificates.X509Certificate2 * bool * string * string * System.Net.Http.HttpClient * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" Usage="new Microsoft.Bot.Connector.Authentication.CertificateAppCredentials (clientCertificate, sendX5c, appId, channelAuthTenant, customHttpClient, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="clientCertificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
        <Parameter Name="sendX5c" Type="System.Boolean" />
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="channelAuthTenant" Type="System.String" />
        <Parameter Name="customHttpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="clientCertificate">Client certificate to be presented for authentication.</param>
        <param name="sendX5c">This parameter, if true, enables application developers to achieve easy certificates roll-over in Azure AD: setting this parameter to true will send the public certificate to Azure AD along with the token request, so that Azure AD can use it to validate the subject name based on a trusted issuer policy. </param>
        <param name="appId">Microsoft application Id related to the certifiacte.</param>
        <param name="channelAuthTenant">Optional. The oauth token tenant.</param>
        <param name="customHttpClient">Optional <see cref="T:System.Net.Http.HttpClient" /> to be used when acquiring tokens.</param>
        <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> to gather telemetry data while acquiring and managing credentials.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildAuthenticator">
      <MemberSignature Language="C#" Value="protected override Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt; BuildAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Lazy`1&lt;class Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt; BuildAuthenticator() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.CertificateAppCredentials.BuildAuthenticator" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function BuildAuthenticator () As Lazy(Of AdalAuthenticator)" />
      <MemberSignature Language="F#" Value="override this.BuildAuthenticator : unit -&gt; Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt;" Usage="certificateAppCredentials.BuildAuthenticator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;Microsoft.Bot.Connector.Authentication.AdalAuthenticator&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
            Builds the lazy <see cref="T:Microsoft.Bot.Connector.Authentication.AdalAuthenticator" /> to be used for token acquisition.
            </summary>
        <returns>A lazy <see cref="T:Microsoft.Bot.Connector.Authentication.AdalAuthenticator" />.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
