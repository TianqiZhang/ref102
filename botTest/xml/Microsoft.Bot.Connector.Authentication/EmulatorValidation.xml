<Type Name="EmulatorValidation" FullName="Microsoft.Bot.Connector.Authentication.EmulatorValidation">
  <TypeSignature Language="C#" Value="public static class EmulatorValidation" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EmulatorValidation extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.EmulatorValidation" />
  <TypeSignature Language="VB.NET" Value="Public Class EmulatorValidation" />
  <TypeSignature Language="F#" Value="type EmulatorValidation = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Validates and Examines JWT tokens from the Bot Framework Emulator.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AuthenticateEmulatorToken">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; AuthenticateEmulatorToken (string authHeader, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, System.Net.Http.HttpClient httpClient, string channelId);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; AuthenticateEmulatorToken(string authHeader, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class System.Net.Http.HttpClient httpClient, string channelId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.EmulatorValidation.AuthenticateEmulatorToken(System.String,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,System.Net.Http.HttpClient,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthenticateEmulatorToken (authHeader As String, credentials As ICredentialProvider, channelProvider As IChannelProvider, httpClient As HttpClient, channelId As String) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="static member AuthenticateEmulatorToken : string * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * System.Net.Http.HttpClient * string -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="Microsoft.Bot.Connector.Authentication.EmulatorValidation.AuthenticateEmulatorToken (authHeader, credentials, channelProvider, httpClient, channelId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="channelId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authHeader">The raw HTTP header in the format: "Bearer [longString]".</param>
        <param name="credentials">The user defined set of valid credentials, such as the AppId.</param>
        <param name="channelProvider">The channelService value that distinguishes public Azure from US Government Azure.</param>
        <param name="httpClient">Authentication of tokens requires calling out to validate Endorsements and related documents. The
            HttpClient is used for making those calls. Those calls generally require TLS connections, which are expensive to
            setup and teardown, so a shared HttpClient is recommended.</param>
        <param name="channelId">The ID of the channel to validate.</param>
        <summary>
            Validate the incoming Auth Header as a token sent from the Bot Framework Emulator.
            </summary>
        <returns>
            A valid ClaimsIdentity.
            </returns>
        <remarks>
            A token issued by the Bot Framework will FAIL this check. Only Emulator tokens will pass.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticateEmulatorToken">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt; AuthenticateEmulatorToken (string authHeader, Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, System.Net.Http.HttpClient httpClient, string channelId, Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Security.Claims.ClaimsIdentity&gt; AuthenticateEmulatorToken(string authHeader, class Microsoft.Bot.Connector.Authentication.ICredentialProvider credentials, class Microsoft.Bot.Connector.Authentication.IChannelProvider channelProvider, class System.Net.Http.HttpClient httpClient, string channelId, class Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration authConfig) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.EmulatorValidation.AuthenticateEmulatorToken(System.String,Microsoft.Bot.Connector.Authentication.ICredentialProvider,Microsoft.Bot.Connector.Authentication.IChannelProvider,System.Net.Http.HttpClient,System.String,Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AuthenticateEmulatorToken (authHeader As String, credentials As ICredentialProvider, channelProvider As IChannelProvider, httpClient As HttpClient, channelId As String, authConfig As AuthenticationConfiguration) As Task(Of ClaimsIdentity)" />
      <MemberSignature Language="F#" Value="static member AuthenticateEmulatorToken : string * Microsoft.Bot.Connector.Authentication.ICredentialProvider * Microsoft.Bot.Connector.Authentication.IChannelProvider * System.Net.Http.HttpClient * string * Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration -&gt; System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;" Usage="Microsoft.Bot.Connector.Authentication.EmulatorValidation.AuthenticateEmulatorToken (authHeader, credentials, channelProvider, httpClient, channelId, authConfig)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Security.Claims.ClaimsIdentity&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
        <Parameter Name="credentials" Type="Microsoft.Bot.Connector.Authentication.ICredentialProvider" />
        <Parameter Name="channelProvider" Type="Microsoft.Bot.Connector.Authentication.IChannelProvider" />
        <Parameter Name="httpClient" Type="System.Net.Http.HttpClient" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="authConfig" Type="Microsoft.Bot.Connector.Authentication.AuthenticationConfiguration" />
      </Parameters>
      <Docs>
        <param name="authHeader">The raw HTTP header in the format: "Bearer [longString]".</param>
        <param name="credentials">The user defined set of valid credentials, such as the AppId.</param>
        <param name="channelProvider">The channelService value that distinguishes public Azure from US Government Azure.</param>
        <param name="httpClient">Authentication of tokens requires calling out to validate Endorsements and related documents. The
            HttpClient is used for making those calls. Those calls generally require TLS connections, which are expensive to
            setup and teardown, so a shared HttpClient is recommended.</param>
        <param name="channelId">The ID of the channel to validate.</param>
        <param name="authConfig">The authentication configuration.</param>
        <summary>
            Validate the incoming Auth Header as a token sent from the Bot Framework Emulator.
            </summary>
        <returns>
            A valid ClaimsIdentity.
            </returns>
        <remarks>
            A token issued by the Bot Framework will FAIL this check. Only Emulator tokens will pass.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTokenFromEmulator">
      <MemberSignature Language="C#" Value="public static bool IsTokenFromEmulator (string authHeader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTokenFromEmulator(string authHeader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.EmulatorValidation.IsTokenFromEmulator(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsTokenFromEmulator (authHeader As String) As Boolean" />
      <MemberSignature Language="F#" Value="static member IsTokenFromEmulator : string -&gt; bool" Usage="Microsoft.Bot.Connector.Authentication.EmulatorValidation.IsTokenFromEmulator authHeader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="authHeader" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authHeader">Bearer Token, in the "Bearer [Long String]" Format.</param>
        <summary>
            Determines if a given Auth header is from the Bot Framework Emulator.
            </summary>
        <returns>True, if the token was issued by the Emulator. Otherwise, false.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToBotFromEmulatorTokenValidationParameters">
      <MemberSignature Language="C#" Value="public static readonly Microsoft.IdentityModel.Tokens.TokenValidationParameters ToBotFromEmulatorTokenValidationParameters;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class Microsoft.IdentityModel.Tokens.TokenValidationParameters ToBotFromEmulatorTokenValidationParameters" />
      <MemberSignature Language="DocId" Value="F:Microsoft.Bot.Connector.Authentication.EmulatorValidation.ToBotFromEmulatorTokenValidationParameters" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToBotFromEmulatorTokenValidationParameters As TokenValidationParameters " />
      <MemberSignature Language="F#" Value=" staticval mutable ToBotFromEmulatorTokenValidationParameters : Microsoft.IdentityModel.Tokens.TokenValidationParameters" Usage="Microsoft.Bot.Connector.Authentication.EmulatorValidation.ToBotFromEmulatorTokenValidationParameters" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.IdentityModel.Tokens.TokenValidationParameters</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            TO BOT FROM EMULATOR: Token validation parameters when connecting to a channel.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
