<Type Name="ServiceClientCredentialsFactory" FullName="Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory">
  <TypeSignature Language="C#" Value="public abstract class ServiceClientCredentialsFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ServiceClientCredentialsFactory extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ServiceClientCredentialsFactory" />
  <TypeSignature Language="F#" Value="type ServiceClientCredentialsFactory = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            The <see cref="T:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory" /> abstract class to allows Bots to provide their own
            <see cref="T:Microsoft.Rest.ServiceClientCredentials" /> for bot to channel or skill bot to parent bot calls.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ServiceClientCredentialsFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredentialsAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsAsync (string appId, string audience, string loginEndpoint, bool validateAuthority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsAsync(string appId, string audience, string loginEndpoint, bool validateAuthority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory.CreateCredentialsAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCredentialsAsync (appId As String, audience As String, loginEndpoint As String, validateAuthority As Boolean, cancellationToken As CancellationToken) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="abstract member CreateCredentialsAsync : string * string * string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="serviceClientCredentialsFactory.CreateCredentialsAsync (appId, audience, loginEndpoint, validateAuthority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="audience" Type="System.String" />
        <Parameter Name="loginEndpoint" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">The appId.</param>
        <param name="audience">The audience.</param>
        <param name="loginEndpoint">The login url.</param>
        <param name="validateAuthority">The validate authority vale to use.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            A factory method for creating ServiceClientCredentials.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the result of the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticationDisabledAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;bool&gt; IsAuthenticationDisabledAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsAuthenticationDisabledAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory.IsAuthenticationDisabledAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsAuthenticationDisabledAsync (cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsAuthenticationDisabledAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="serviceClientCredentialsFactory.IsAuthenticationDisabledAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Checks whether bot authentication is disabled.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful and bot authentication is disabled, the result
            is true; otherwise, false.
            <para>
            This method is async to enable custom implementations
            that may need to call out to serviced to validate the appId / password pair.
            </para></remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValidAppIdAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;bool&gt; IsValidAppIdAsync (string appId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsValidAppIdAsync(string appId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory.IsValidAppIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsValidAppIdAsync (appId As String, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="abstract member IsValidAppIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="serviceClientCredentialsFactory.IsValidAppIdAsync (appId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">The app ID to validate.</param>
        <param name="cancellationToken">A cancellation token.</param>
        <summary>
            Validates an app ID.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result is true if <paramref name="appId" />
            is valid for the controller; otherwise, false.
            <para>
            This method is async to enable custom implementations
            that may need to call out to serviced to validate the appId / password pair.
            </para></remarks>
      </Docs>
    </Member>
  </Members>
</Type>
