<Type Name="MsalServiceClientCredentialsFactory" FullName="Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory">
  <TypeSignature Language="C#" Value="public class MsalServiceClientCredentialsFactory : Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MsalServiceClientCredentialsFactory extends Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory" />
  <TypeSignature Language="VB.NET" Value="Public Class MsalServiceClientCredentialsFactory&#xA;Inherits ServiceClientCredentialsFactory" />
  <TypeSignature Language="F#" Value="type MsalServiceClientCredentialsFactory = class&#xA;    inherit ServiceClientCredentialsFactory" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Bot.Connector.Authentication.ServiceClientCredentialsFactory</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Credential factory that uses MSAL to acquire tokens.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MsalServiceClientCredentialsFactory (Microsoft.Extensions.Configuration.IConfiguration configuration, Microsoft.Identity.Client.IConfidentialClientApplication clientApplication, Microsoft.Extensions.Logging.ILogger logger = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Extensions.Configuration.IConfiguration configuration, class Microsoft.Identity.Client.IConfidentialClientApplication clientApplication, class Microsoft.Extensions.Logging.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory.#ctor(Microsoft.Extensions.Configuration.IConfiguration,Microsoft.Identity.Client.IConfidentialClientApplication,Microsoft.Extensions.Logging.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (configuration As IConfiguration, clientApplication As IConfidentialClientApplication, Optional logger As ILogger = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory : Microsoft.Extensions.Configuration.IConfiguration * Microsoft.Identity.Client.IConfidentialClientApplication * Microsoft.Extensions.Logging.ILogger -&gt; Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory" Usage="new Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory (configuration, clientApplication, logger)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="configuration" Type="Microsoft.Extensions.Configuration.IConfiguration" />
        <Parameter Name="clientApplication" Type="Microsoft.Identity.Client.IConfidentialClientApplication" />
        <Parameter Name="logger" Type="Microsoft.Extensions.Logging.ILogger" />
      </Parameters>
      <Docs>
        <param name="configuration">
          <see cref="T:Microsoft.Extensions.Configuration.IConfiguration" /> where to get the AppId from.</param>
        <param name="clientApplication">
          <see cref="T:Microsoft.Identity.Client.IConfidentialClientApplication" /> used to acquire tokens.</param>
        <param name="logger">Optional <see cref="T:Microsoft.Extensions.Logging.ILogger" /> for credential acquisition telemetry.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppId">
      <MemberSignature Language="C#" Value="public string AppId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppId" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory.AppId" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AppId As String" />
      <MemberSignature Language="F#" Value="member this.AppId : string" Usage="Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory.AppId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the Microsoft App id.
            </summary>
        <value>
            The Microsoft App id.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCredentialsAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsAsync (string appId, string audience, string loginEndpoint, bool validateAuthority, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.ServiceClientCredentials&gt; CreateCredentialsAsync(string appId, string audience, string loginEndpoint, bool validateAuthority, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory.CreateCredentialsAsync(System.String,System.String,System.String,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateCredentialsAsync (appId As String, audience As String, loginEndpoint As String, validateAuthority As Boolean, cancellationToken As CancellationToken) As Task(Of ServiceClientCredentials)" />
      <MemberSignature Language="F#" Value="override this.CreateCredentialsAsync : string * string * string * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;" Usage="msalServiceClientCredentialsFactory.CreateCredentialsAsync (appId, audience, loginEndpoint, validateAuthority, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.ServiceClientCredentials&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="audience" Type="System.String" />
        <Parameter Name="loginEndpoint" Type="System.String" />
        <Parameter Name="validateAuthority" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">To be added.</param>
        <param name="audience">To be added.</param>
        <param name="loginEndpoint">To be added.</param>
        <param name="validateAuthority">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticationDisabledAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; IsAuthenticationDisabledAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsAuthenticationDisabledAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory.IsAuthenticationDisabledAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsAuthenticationDisabledAsync (cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="override this.IsAuthenticationDisabledAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="msalServiceClientCredentialsFactory.IsAuthenticationDisabledAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="IsValidAppIdAsync">
      <MemberSignature Language="C#" Value="public override System.Threading.Tasks.Task&lt;bool&gt; IsValidAppIdAsync (string appId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Threading.Tasks.Task`1&lt;bool&gt; IsValidAppIdAsync(string appId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.MsalServiceClientCredentialsFactory.IsValidAppIdAsync(System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsValidAppIdAsync (appId As String, cancellationToken As CancellationToken) As Task(Of Boolean)" />
      <MemberSignature Language="F#" Value="override this.IsValidAppIdAsync : string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;bool&gt;" Usage="msalServiceClientCredentialsFactory.IsValidAppIdAsync (appId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="appId">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
  </Members>
</Type>
