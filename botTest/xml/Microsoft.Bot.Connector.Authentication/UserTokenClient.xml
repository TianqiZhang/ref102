<Type Name="UserTokenClient" FullName="Microsoft.Bot.Connector.Authentication.UserTokenClient">
  <TypeSignature Language="C#" Value="public abstract class UserTokenClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit UserTokenClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.UserTokenClient" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class UserTokenClient&#xA;Implements IDisposable" />
  <TypeSignature Language="F#" Value="type UserTokenClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Client for access user token service.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected UserTokenClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateTokenExchangeState">
      <MemberSignature Language="C#" Value="protected static string CreateTokenExchangeState (string appId, string connectionName, Microsoft.Bot.Schema.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig string CreateTokenExchangeState(string appId, string connectionName, class Microsoft.Bot.Schema.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.CreateTokenExchangeState(System.String,System.String,Microsoft.Bot.Schema.Activity)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateTokenExchangeState (appId As String, connectionName As String, activity As Activity) As String" />
      <MemberSignature Language="F#" Value="static member CreateTokenExchangeState : string * string * Microsoft.Bot.Schema.Activity -&gt; string" Usage="Microsoft.Bot.Connector.Authentication.UserTokenClient.CreateTokenExchangeState (appId, connectionName, activity)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appId" Type="System.String" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
      </Parameters>
      <Docs>
        <param name="appId">The appId to include in the token exchange state.</param>
        <param name="connectionName">The connectionName to include in the token exchange state.</param>
        <param name="activity">The <see cref="T:Microsoft.Bot.Schema.Activity" /> from which to derive the token exchange state.</param>
        <summary>
            Helper function to create the base64 encoded token exchange state used in GetSignInResourceAsync calls.
            </summary>
        <returns>base64 encoded token exchange state.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="userTokenClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
        <inheritdoc />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="userTokenClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">Indicates where this method is called from.</param>
        <summary>
            Protected implementation of dispose pattern.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExchangeTokenAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenResponse&gt; ExchangeTokenAsync (string userId, string connectionName, string channelId, Microsoft.Bot.Schema.TokenExchangeRequest exchangeRequest, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.TokenResponse&gt; ExchangeTokenAsync(string userId, string connectionName, string channelId, class Microsoft.Bot.Schema.TokenExchangeRequest exchangeRequest, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.ExchangeTokenAsync(System.String,System.String,System.String,Microsoft.Bot.Schema.TokenExchangeRequest,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ExchangeTokenAsync (userId As String, connectionName As String, channelId As String, exchangeRequest As TokenExchangeRequest, cancellationToken As CancellationToken) As Task(Of TokenResponse)" />
      <MemberSignature Language="F#" Value="abstract member ExchangeTokenAsync : string * string * string * Microsoft.Bot.Schema.TokenExchangeRequest * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenResponse&gt;" Usage="userTokenClient.ExchangeTokenAsync (userId, connectionName, channelId, exchangeRequest, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="exchangeRequest" Type="Microsoft.Bot.Schema.TokenExchangeRequest" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">The user id that will be associated with the token.</param>
        <param name="connectionName">Name of the auth connection to use.</param>
        <param name="channelId">The channel Id that will be associated with the token.</param>
        <param name="exchangeRequest">The exchange request details, either a token to exchange or a uri to exchange.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Performs a token exchange operation such as for single sign-on.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the result of the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAadTokensAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string,Microsoft.Bot.Schema.TokenResponse&gt;&gt; GetAadTokensAsync (string userId, string connectionName, string[] resourceUrls, string channelId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.Dictionary`2&lt;string, class Microsoft.Bot.Schema.TokenResponse&gt;&gt; GetAadTokensAsync(string userId, string connectionName, string[] resourceUrls, string channelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.GetAadTokensAsync(System.String,System.String,System.String[],System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAadTokensAsync (userId As String, connectionName As String, resourceUrls As String(), channelId As String, cancellationToken As CancellationToken) As Task(Of Dictionary(Of String, TokenResponse))" />
      <MemberSignature Language="F#" Value="abstract member GetAadTokensAsync : string * string * string[] * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string, Microsoft.Bot.Schema.TokenResponse&gt;&gt;" Usage="userTokenClient.GetAadTokensAsync (userId, connectionName, resourceUrls, channelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;System.String,Microsoft.Bot.Schema.TokenResponse&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="resourceUrls" Type="System.String[]" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">The user id that will be associated with the token.</param>
        <param name="connectionName">Name of the auth connection to use.</param>
        <param name="resourceUrls">The list of resource URLs to retrieve tokens for.</param>
        <param name="channelId">The channel Id that will be associated with the token.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Retrieves Azure Active Directory tokens for particular resources on a configured connection.
            </summary>
        <returns>A Task of Dictionary of resourceUrl to the corresponding TokenResponse.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSignInResourceAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.SignInResource&gt; GetSignInResourceAsync (string connectionName, Microsoft.Bot.Schema.Activity activity, string finalRedirect, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.SignInResource&gt; GetSignInResourceAsync(string connectionName, class Microsoft.Bot.Schema.Activity activity, string finalRedirect, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.GetSignInResourceAsync(System.String,Microsoft.Bot.Schema.Activity,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetSignInResourceAsync (connectionName As String, activity As Activity, finalRedirect As String, cancellationToken As CancellationToken) As Task(Of SignInResource)" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResourceAsync : string * Microsoft.Bot.Schema.Activity * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.SignInResource&gt;" Usage="userTokenClient.GetSignInResourceAsync (connectionName, activity, finalRedirect, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.SignInResource&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="finalRedirect" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="connectionName">Name of the auth connection to use.</param>
        <param name="activity">The <see cref="T:Microsoft.Bot.Schema.Activity" /> from which to derive the token exchange state.</param>
        <param name="finalRedirect">The final URL that the OAuth flow will redirect to.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Get the raw signin link to be sent to the user for signin for a connection name.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task`1" /> representing the result of the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenStatusAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenStatus[]&gt; GetTokenStatusAsync (string userId, string channelId, string includeFilter, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.TokenStatus[]&gt; GetTokenStatusAsync(string userId, string channelId, string includeFilter, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.GetTokenStatusAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTokenStatusAsync (userId As String, channelId As String, includeFilter As String, cancellationToken As CancellationToken) As Task(Of TokenStatus())" />
      <MemberSignature Language="F#" Value="abstract member GetTokenStatusAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenStatus[]&gt;" Usage="userTokenClient.GetTokenStatusAsync (userId, channelId, includeFilter, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenStatus[]&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="includeFilter" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">The user id that will be associated with the token.</param>
        <param name="channelId">The channel Id that will be associated with the token.</param>
        <param name="includeFilter">The includeFilter.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Retrieves the token status for each configured connection for the given user.
            </summary>
        <returns>A Task of Array of TokenStatus.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUserTokenAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenResponse&gt; GetUserTokenAsync (string userId, string connectionName, string channelId, string magicCode, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.TokenResponse&gt; GetUserTokenAsync(string userId, string connectionName, string channelId, string magicCode, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.GetUserTokenAsync(System.String,System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUserTokenAsync (userId As String, connectionName As String, channelId As String, magicCode As String, cancellationToken As CancellationToken) As Task(Of TokenResponse)" />
      <MemberSignature Language="F#" Value="abstract member GetUserTokenAsync : string * string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenResponse&gt;" Usage="userTokenClient.GetUserTokenAsync (userId, connectionName, channelId, magicCode, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.TokenResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="magicCode" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">The user id that will be associated with the token.</param>
        <param name="connectionName">Name of the auth connection to use.</param>
        <param name="channelId">The channel Id that will be associated with the token.</param>
        <param name="magicCode">(Optional) Optional user entered code to validate.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Attempts to retrieve the token for a user that's in a login flow.
            </summary>
        <returns>Token Response.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutUserAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task SignOutUserAsync (string userId, string connectionName, string channelId, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SignOutUserAsync(string userId, string connectionName, string channelId, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.UserTokenClient.SignOutUserAsync(System.String,System.String,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function SignOutUserAsync (userId As String, connectionName As String, channelId As String, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member SignOutUserAsync : string * string * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="userTokenClient.SignOutUserAsync (userId, connectionName, channelId, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userId" Type="System.String" />
        <Parameter Name="connectionName" Type="System.String" />
        <Parameter Name="channelId" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="userId">The user id that will be associated with the token.</param>
        <param name="connectionName">Name of the auth connection to use.</param>
        <param name="channelId">The channel Id that will be associated with the token.</param>
        <param name="cancellationToken">Cancellation token.</param>
        <summary>
            Signs the user out with the token server.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the result of the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
