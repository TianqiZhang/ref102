<Type Name="EndorsementsValidator" FullName="Microsoft.Bot.Connector.Authentication.EndorsementsValidator">
  <TypeSignature Language="C#" Value="public static class EndorsementsValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EndorsementsValidator extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Authentication.EndorsementsValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class EndorsementsValidator" />
  <TypeSignature Language="F#" Value="type EndorsementsValidator = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Contains helper methods for verifying JWT endorsements.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Validate">
      <MemberSignature Language="C#" Value="public static bool Validate (string expectedEndorsement, System.Collections.Generic.HashSet&lt;string&gt; endorsements);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Validate(string expectedEndorsement, class System.Collections.Generic.HashSet`1&lt;string&gt; endorsements) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Authentication.EndorsementsValidator.Validate(System.String,System.Collections.Generic.HashSet{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Validate (expectedEndorsement As String, endorsements As HashSet(Of String)) As Boolean" />
      <MemberSignature Language="F#" Value="static member Validate : string * System.Collections.Generic.HashSet&lt;string&gt; -&gt; bool" Usage="Microsoft.Bot.Connector.Authentication.EndorsementsValidator.Validate (expectedEndorsement, endorsements)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expectedEndorsement" Type="System.String" />
        <Parameter Name="endorsements" Type="System.Collections.Generic.HashSet&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="expectedEndorsement">The expected endorsement. Generally the ID of the channel to validate, typically extracted from the activity's
            <see cref="P:Microsoft.Bot.Schema.Activity.ChannelId" /> property, that to which the Activity is affinitized. Alternatively, it could represent a compliance certification that is required.</param>
        <param name="endorsements">The JWT token’s signing party is permitted to send activities only for
            specific channels. That list, the set of channels the service can sign for, is called the endorsement list.
            The activity’s <see cref="P:Microsoft.Bot.Schema.Activity.ChannelId" /> MUST be found in the endorsement list, or the incoming
            activity is not considered valid.</param>
        <summary>
            Verify that the specified endorsement exists on the JWT token. Call this method multiple times to validate multiple endorsements.
            For example, if an <see cref="T:Microsoft.Bot.Schema.Activity" /> comes from WebChat, that activity's
            <see cref="P:Microsoft.Bot.Schema.Activity.ChannelId" /> property is set to "webchat" and the signing party
            of the JWT token must have a corresponding endorsement of “Webchat”.
            </summary>
        <returns>True if the channel ID is found in the endorsements list; otherwise, false.</returns>
        <remarks>
            JWT token signing keys contain endorsements matching the IDs of the channels they are approved to sign for.
            They also contain keywords representing compliance certifications. This code ensures that a channel ID or compliance
            certification is present on the signing key used for the request's token.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
