<Type Name="BotFrameworkClient" FullName="Microsoft.Bot.Builder.Skills.BotFrameworkClient">
  <TypeSignature Language="C#" Value="public abstract class BotFrameworkClient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BotFrameworkClient extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.Skills.BotFrameworkClient" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BotFrameworkClient" />
  <TypeSignature Language="F#" Value="type BotFrameworkClient = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BotFrameworkClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Skills.BotFrameworkClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostActivityAsync">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt; PostActivityAsync (string fromBotId, string toBotId, Uri toUrl, Uri serviceUrl, string conversationId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.InvokeResponse&gt; PostActivityAsync(string fromBotId, string toBotId, class System.Uri toUrl, class System.Uri serviceUrl, string conversationId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Skills.BotFrameworkClient.PostActivityAsync(System.String,System.String,System.Uri,System.Uri,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function PostActivityAsync (fromBotId As String, toBotId As String, toUrl As Uri, serviceUrl As Uri, conversationId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member PostActivityAsync : string * string * Uri * Uri * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;" Usage="botFrameworkClient.PostActivityAsync (fromBotId, toBotId, toUrl, serviceUrl, conversationId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fromBotId" Type="System.String" />
        <Parameter Name="toBotId" Type="System.String" />
        <Parameter Name="toUrl" Type="System.Uri" />
        <Parameter Name="serviceUrl" Type="System.Uri" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="fromBotId">The MicrosoftAppId of the bot sending the activity.</param>
        <param name="toBotId">The MicrosoftAppId of the bot receiving the activity.</param>
        <param name="toUrl">The URL of the bot receiving the activity.</param>
        <param name="serviceUrl">The callback Url for the skill host.</param>
        <param name="conversationId">A conversation ID to use for the conversation with the skill.</param>
        <param name="activity">activity to forward.</param>
        <param name="cancellationToken">cancellation Token.</param>
        <summary>
            Forwards an activity to a skill (bot).
            </summary>
        <returns>Async task with optional invokeResponse.</returns>
        <remarks>NOTE: Forwarding an activity to a skill will flush UserState and ConversationState changes so that skill has accurate state.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PostActivityAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&lt;T&gt;&gt; PostActivityAsync&lt;T&gt; (string fromBotId, string toBotId, Uri toUrl, Uri serviceUrl, string conversationId, Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.InvokeResponse`1&lt;!!T&gt;&gt; PostActivityAsync&lt;T&gt;(string fromBotId, string toBotId, class System.Uri toUrl, class System.Uri serviceUrl, string conversationId, class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.Skills.BotFrameworkClient.PostActivityAsync``1(System.String,System.String,System.Uri,System.Uri,System.String,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function PostActivityAsync(Of T) (fromBotId As String, toBotId As String, toUrl As Uri, serviceUrl As Uri, conversationId As String, activity As Activity, Optional cancellationToken As CancellationToken = Nothing) As Task(Of InvokeResponse(Of T))" />
      <MemberSignature Language="F#" Value="abstract member PostActivityAsync : string * string * Uri * Uri * string * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&lt;'T&gt;&gt;" Usage="botFrameworkClient.PostActivityAsync (fromBotId, toBotId, toUrl, serviceUrl, conversationId, activity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="fromBotId" Type="System.String" />
        <Parameter Name="toBotId" Type="System.String" />
        <Parameter Name="toUrl" Type="System.Uri" />
        <Parameter Name="serviceUrl" Type="System.Uri" />
        <Parameter Name="conversationId" Type="System.String" />
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The type of body in the InvokeResponse.</typeparam>
        <param name="fromBotId">The MicrosoftAppId of the bot sending the activity.</param>
        <param name="toBotId">The MicrosoftAppId of the bot receiving the activity.</param>
        <param name="toUrl">The URL of the bot receiving the activity.</param>
        <param name="serviceUrl">The callback Url for the skill host.</param>
        <param name="conversationId">A conversation ID to use for the conversation with the skill.</param>
        <param name="activity">activity to forward.</param>
        <param name="cancellationToken">cancellation Token.</param>
        <summary>
            Forwards an activity to a skill (bot).
            </summary>
        <returns>Async task with optional invokeResponse.</returns>
        <remarks>NOTE: Forwarding an activity to a skill will flush UserState and ConversationState changes so that skill has accurate state.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
