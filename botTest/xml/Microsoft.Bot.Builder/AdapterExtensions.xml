<Type Name="AdapterExtensions" FullName="Microsoft.Bot.Builder.AdapterExtensions">
  <TypeSignature Language="C#" Value="public static class AdapterExtensions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit AdapterExtensions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.AdapterExtensions" />
  <TypeSignature Language="VB.NET" Value="Public Module AdapterExtensions" />
  <TypeSignature Language="F#" Value="type AdapterExtensions = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            Defines extension methods for the <see cref="T:Microsoft.Bot.Builder.BotAdapter" /> class.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="UseBotState">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.BotAdapter UseBotState (this Microsoft.Bot.Builder.BotAdapter botAdapter, params Microsoft.Bot.Builder.BotState[] botStates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.BotAdapter UseBotState(class Microsoft.Bot.Builder.BotAdapter botAdapter, class Microsoft.Bot.Builder.BotState[] botStates) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.AdapterExtensions.UseBotState(Microsoft.Bot.Builder.BotAdapter,Microsoft.Bot.Builder.BotState[])" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseBotState (botAdapter As BotAdapter, ParamArray botStates As BotState()) As BotAdapter" />
      <MemberSignature Language="F#" Value="static member UseBotState : Microsoft.Bot.Builder.BotAdapter * Microsoft.Bot.Builder.BotState[] -&gt; Microsoft.Bot.Builder.BotAdapter" Usage="Microsoft.Bot.Builder.AdapterExtensions.UseBotState (botAdapter, botStates)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.BotAdapter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="botAdapter" Type="Microsoft.Bot.Builder.BotAdapter" RefType="this" />
        <Parameter Name="botStates" Type="Microsoft.Bot.Builder.BotState[]">
          <Attributes>
            <Attribute>
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="botAdapter">The adapter on which to register the state objects.</param>
        <param name="botStates">The state objects to register.</param>
        <summary>
            Adds middleware to the adapter to register one or more <see cref="T:Microsoft.Bot.Builder.BotState" /> objects on the turn context.
            The middleware registers the state objects on the turn context at the start of each turn.
            </summary>
        <returns>The updated adapter.</returns>
        <remarks>
            To get the state objects, use the turn context's <see cref="P:Microsoft.Bot.Builder.ITurnContext.TurnState" />
            property's <see cref="M:Microsoft.Bot.Builder.TurnContextStateCollection.Get``1(System.String)" /> method, where the `key`
            parameter is the fully qualified name of the type of bot state to get.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseState">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.BotAdapter UseState (this Microsoft.Bot.Builder.BotAdapter botAdapter, Microsoft.Bot.Builder.UserState userState, Microsoft.Bot.Builder.ConversationState conversationState, bool auto = true);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.BotAdapter UseState(class Microsoft.Bot.Builder.BotAdapter botAdapter, class Microsoft.Bot.Builder.UserState userState, class Microsoft.Bot.Builder.ConversationState conversationState, bool auto) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.AdapterExtensions.UseState(Microsoft.Bot.Builder.BotAdapter,Microsoft.Bot.Builder.UserState,Microsoft.Bot.Builder.ConversationState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseState (botAdapter As BotAdapter, userState As UserState, conversationState As ConversationState, Optional auto As Boolean = true) As BotAdapter" />
      <MemberSignature Language="F#" Value="static member UseState : Microsoft.Bot.Builder.BotAdapter * Microsoft.Bot.Builder.UserState * Microsoft.Bot.Builder.ConversationState * bool -&gt; Microsoft.Bot.Builder.BotAdapter" Usage="Microsoft.Bot.Builder.AdapterExtensions.UseState (botAdapter, userState, conversationState, auto)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Obsolete("This method is deprecated in 4.9.  You should use the method .UseBotState() instead.")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("This method is deprecated in 4.9.  You should use the method .UseBotState() instead.")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.BotAdapter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="botAdapter" Type="Microsoft.Bot.Builder.BotAdapter" RefType="this" />
        <Parameter Name="userState" Type="Microsoft.Bot.Builder.UserState" />
        <Parameter Name="conversationState" Type="Microsoft.Bot.Builder.ConversationState" />
        <Parameter Name="auto" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="botAdapter">The <see cref="T:Microsoft.Bot.Builder.BotAdapter" /> on which to register the objects.</param>
        <param name="userState">The <see cref="T:Microsoft.Bot.Builder.UserState" /> object to register.</param>
        <param name="conversationState">The <see cref="T:Microsoft.Bot.Builder.ConversationState" /> object to register.</param>
        <param name="auto">`true` to automatically persist state each turn; otherwise, `false`.
            When false, it is your responsibility to persist state each turn.</param>
        <summary>
            Registers user and conversation state objects with the adapter. These objects will be available via the turn context's
            <see cref="P:Microsoft.Bot.Builder.TurnContext.TurnState" />.<see cref="M:Microsoft.Bot.Builder.TurnContextStateCollection.Get``1" /> method.
            </summary>
        <returns>The updated adapter.</returns>
        <remarks>
            This adds <see cref="T:Microsoft.Bot.Builder.IMiddleware" /> to register the user and conversation state management objects.
            If <paramref name="auto" /> is true, this also adds middleware to automatically persist state before each turn ends.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseStorage">
      <MemberSignature Language="C#" Value="public static Microsoft.Bot.Builder.BotAdapter UseStorage (this Microsoft.Bot.Builder.BotAdapter botAdapter, Microsoft.Bot.Builder.IStorage storage);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class Microsoft.Bot.Builder.BotAdapter UseStorage(class Microsoft.Bot.Builder.BotAdapter botAdapter, class Microsoft.Bot.Builder.IStorage storage) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.AdapterExtensions.UseStorage(Microsoft.Bot.Builder.BotAdapter,Microsoft.Bot.Builder.IStorage)" />
      <MemberSignature Language="VB.NET" Value="&lt;Extension()&gt;&#xA;Public Function UseStorage (botAdapter As BotAdapter, storage As IStorage) As BotAdapter" />
      <MemberSignature Language="F#" Value="static member UseStorage : Microsoft.Bot.Builder.BotAdapter * Microsoft.Bot.Builder.IStorage -&gt; Microsoft.Bot.Builder.BotAdapter" Usage="Microsoft.Bot.Builder.AdapterExtensions.UseStorage (botAdapter, storage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.BotAdapter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="botAdapter" Type="Microsoft.Bot.Builder.BotAdapter" RefType="this" />
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.IStorage" />
      </Parameters>
      <Docs>
        <param name="botAdapter">The adapter on which to register the storage object.</param>
        <param name="storage">The storage object to register.</param>
        <summary>
            Adds middleware to the adapter to register an <see cref="T:Microsoft.Bot.Builder.IStorage" /> object on the turn context.
            The middleware registers the state objects on the turn context at the start of each turn.
            </summary>
        <returns>The updated adapter.</returns>
        <remarks>
            To get the storage object, use the turn context's <see cref="P:Microsoft.Bot.Builder.ITurnContext.TurnState" />
            property's <see cref="M:Microsoft.Bot.Builder.TurnContextStateCollection.Get``1" /> method.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
