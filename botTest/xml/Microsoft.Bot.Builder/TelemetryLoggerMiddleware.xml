<Type Name="TelemetryLoggerMiddleware" FullName="Microsoft.Bot.Builder.TelemetryLoggerMiddleware">
  <TypeSignature Language="C#" Value="public class TelemetryLoggerMiddleware : Microsoft.Bot.Builder.IMiddleware" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TelemetryLoggerMiddleware extends System.Object implements class Microsoft.Bot.Builder.IMiddleware" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.TelemetryLoggerMiddleware" />
  <TypeSignature Language="VB.NET" Value="Public Class TelemetryLoggerMiddleware&#xA;Implements IMiddleware" />
  <TypeSignature Language="F#" Value="type TelemetryLoggerMiddleware = class&#xA;    interface IMiddleware" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IMiddleware</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Uses a <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient" /> object to log incoming, outgoing, updated, or deleted message activities.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TelemetryLoggerMiddleware (Microsoft.Bot.Builder.IBotTelemetryClient telemetryClient, bool logPersonalInformation = false);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.IBotTelemetryClient telemetryClient, bool logPersonalInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.#ctor(Microsoft.Bot.Builder.IBotTelemetryClient,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (telemetryClient As IBotTelemetryClient, Optional logPersonalInformation As Boolean = false)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.TelemetryLoggerMiddleware : Microsoft.Bot.Builder.IBotTelemetryClient * bool -&gt; Microsoft.Bot.Builder.TelemetryLoggerMiddleware" Usage="new Microsoft.Bot.Builder.TelemetryLoggerMiddleware (telemetryClient, logPersonalInformation)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="telemetryClient" Type="Microsoft.Bot.Builder.IBotTelemetryClient" />
        <Parameter Name="logPersonalInformation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="telemetryClient">The telemetry client to send telemetry events to.</param>
        <param name="logPersonalInformation">`true` to include personally identifiable information; otherwise, `false`.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.TelemetryLoggerMiddleware" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillDeleteEventPropertiesAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string,string&gt;&gt; FillDeleteEventPropertiesAsync (Microsoft.Bot.Schema.IMessageDeleteActivity activity, System.Collections.Generic.Dictionary&lt;string,string&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&gt; FillDeleteEventPropertiesAsync(class Microsoft.Bot.Schema.IMessageDeleteActivity activity, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.FillDeleteEventPropertiesAsync(Microsoft.Bot.Schema.IMessageDeleteActivity,System.Collections.Generic.Dictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Function FillDeleteEventPropertiesAsync (activity As IMessageDeleteActivity, Optional additionalProperties As Dictionary(Of String, String) = Nothing) As Task(Of Dictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.FillDeleteEventPropertiesAsync : Microsoft.Bot.Schema.IMessageDeleteActivity * System.Collections.Generic.Dictionary&lt;string, string&gt; -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string, string&gt;&gt;" Usage="telemetryLoggerMiddleware.FillDeleteEventPropertiesAsync (activity, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.IMessageDeleteActivity" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity">The Activity object deleted by bot.</param>
        <param name="additionalProperties">Additional properties to add to the event.</param>
        <summary>
            Fills event properties for the <see cref="F:Microsoft.Bot.Builder.TelemetryLoggerConstants.BotMsgDeleteEvent" /> event.
            </summary>
        <returns>The properties and their values to log when the bot deletes a message it sent previously.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillReceiveEventPropertiesAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string,string&gt;&gt; FillReceiveEventPropertiesAsync (Microsoft.Bot.Schema.Activity activity, System.Collections.Generic.Dictionary&lt;string,string&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&gt; FillReceiveEventPropertiesAsync(class Microsoft.Bot.Schema.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.FillReceiveEventPropertiesAsync(Microsoft.Bot.Schema.Activity,System.Collections.Generic.Dictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Function FillReceiveEventPropertiesAsync (activity As Activity, Optional additionalProperties As Dictionary(Of String, String) = Nothing) As Task(Of Dictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.FillReceiveEventPropertiesAsync : Microsoft.Bot.Schema.Activity * System.Collections.Generic.Dictionary&lt;string, string&gt; -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string, string&gt;&gt;" Usage="telemetryLoggerMiddleware.FillReceiveEventPropertiesAsync (activity, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity">The message activity sent from user.</param>
        <param name="additionalProperties">Additional properties to add to the event.</param>
        <summary>
            Fills event properties for the <see cref="F:Microsoft.Bot.Builder.TelemetryLoggerConstants.BotMsgReceiveEvent" /> event.
            If the <see cref="P:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.LogPersonalInformation" /> is true, filters out the sender's name and the
            message's text and speak fields.
            </summary>
        <returns>The properties and their values to log when a message is received from the user.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillSendEventPropertiesAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string,string&gt;&gt; FillSendEventPropertiesAsync (Microsoft.Bot.Schema.Activity activity, System.Collections.Generic.Dictionary&lt;string,string&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&gt; FillSendEventPropertiesAsync(class Microsoft.Bot.Schema.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.FillSendEventPropertiesAsync(Microsoft.Bot.Schema.Activity,System.Collections.Generic.Dictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Function FillSendEventPropertiesAsync (activity As Activity, Optional additionalProperties As Dictionary(Of String, String) = Nothing) As Task(Of Dictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.FillSendEventPropertiesAsync : Microsoft.Bot.Schema.Activity * System.Collections.Generic.Dictionary&lt;string, string&gt; -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string, string&gt;&gt;" Usage="telemetryLoggerMiddleware.FillSendEventPropertiesAsync (activity, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity">The user's activity to which the bot is responding.</param>
        <param name="additionalProperties">Additional properties to add to the event.</param>
        <summary>
            Fills event properties for the <see cref="F:Microsoft.Bot.Builder.TelemetryLoggerConstants.BotMsgSendEvent" /> event.
            If the <see cref="P:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.LogPersonalInformation" /> is true, filters out the recipient's name and the
            message's text and speak fields.
            </summary>
        <returns>The properties and their values to log when the bot sends the user a message.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FillUpdateEventPropertiesAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string,string&gt;&gt; FillUpdateEventPropertiesAsync (Microsoft.Bot.Schema.Activity activity, System.Collections.Generic.Dictionary&lt;string,string&gt; additionalProperties = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.Dictionary`2&lt;string, string&gt;&gt; FillUpdateEventPropertiesAsync(class Microsoft.Bot.Schema.Activity activity, class System.Collections.Generic.Dictionary`2&lt;string, string&gt; additionalProperties) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.FillUpdateEventPropertiesAsync(Microsoft.Bot.Schema.Activity,System.Collections.Generic.Dictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Protected Function FillUpdateEventPropertiesAsync (activity As Activity, Optional additionalProperties As Dictionary(Of String, String) = Nothing) As Task(Of Dictionary(Of String, String))" />
      <MemberSignature Language="F#" Value="member this.FillUpdateEventPropertiesAsync : Microsoft.Bot.Schema.Activity * System.Collections.Generic.Dictionary&lt;string, string&gt; -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;string, string&gt;&gt;" Usage="telemetryLoggerMiddleware.FillUpdateEventPropertiesAsync (activity, additionalProperties)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="additionalProperties" Type="System.Collections.Generic.Dictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="activity">Last activity sent from user.</param>
        <param name="additionalProperties">Additional properties to add to the event.</param>
        <summary>
            Fills event properties for the <see cref="F:Microsoft.Bot.Builder.TelemetryLoggerConstants.BotMsgUpdateEvent" /> event.
            If the <see cref="P:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.LogPersonalInformation" /> is true, filters out the message's text field.
            </summary>
        <returns>The properties and their values to log when the bot updates a message it sent previously.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPersonalInformation">
      <MemberSignature Language="C#" Value="public bool LogPersonalInformation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogPersonalInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.LogPersonalInformation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogPersonalInformation As Boolean" />
      <MemberSignature Language="F#" Value="member this.LogPersonalInformation : bool" Usage="Microsoft.Bot.Builder.TelemetryLoggerMiddleware.LogPersonalInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a value indicating whether to include personal information that came from the user.
            </summary>
        <value>`true` to include personally identifiable information; otherwise, `false`.</value>
        <remarks>
            If true, personal information is included in calls to the telemetry client's
            <see cref="M:Microsoft.Bot.Builder.IBotTelemetryClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})" /> method;
            otherwise this information is filtered out.
            </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDeleteActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnDeleteActivityAsync (Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnDeleteActivityAsync(class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.OnDeleteActivityAsync(Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnDeleteActivityAsync (activity As Activity, cancellation As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnDeleteActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="telemetryLoggerMiddleware.OnDeleteActivityAsync (activity, cancellation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellation" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="activity">Current activity sent from user.</param>
        <param name="cancellation">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Uses the telemetry client's
            <see cref="M:Microsoft.Bot.Builder.IBotTelemetryClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})" /> method to
            log telemetry data when the bot deletes a message it sent previously.
            The event name is <see cref="F:Microsoft.Bot.Builder.TelemetryLoggerConstants.BotMsgDeleteEvent" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnReceiveActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnReceiveActivityAsync (Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnReceiveActivityAsync(class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.OnReceiveActivityAsync(Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnReceiveActivityAsync (activity As Activity, cancellation As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnReceiveActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnReceiveActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="telemetryLoggerMiddleware.OnReceiveActivityAsync (activity, cancellation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellation" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="activity">Current activity sent from user.</param>
        <param name="cancellation">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Uses the telemetry client's
            <see cref="M:Microsoft.Bot.Builder.IBotTelemetryClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})" /> method to
            log telemetry data when a message is received from the user.
            The event name is <see cref="F:Microsoft.Bot.Builder.TelemetryLoggerConstants.BotMsgReceiveEvent" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSendActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnSendActivityAsync (Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnSendActivityAsync(class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.OnSendActivityAsync(Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSendActivityAsync (activity As Activity, cancellation As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnSendActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnSendActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="telemetryLoggerMiddleware.OnSendActivityAsync (activity, cancellation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellation" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="activity">Current activity sent from user.</param>
        <param name="cancellation">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Uses the telemetry client's
            <see cref="M:Microsoft.Bot.Builder.IBotTelemetryClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})" /> method to
            log telemetry data when the bot sends the user a message. It uses the telemetry client's
            The event name is <see cref="F:Microsoft.Bot.Builder.TelemetryLoggerConstants.BotMsgSendEvent" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OnTurnAsync (Microsoft.Bot.Builder.ITurnContext context, Microsoft.Bot.Builder.NextDelegate nextTurn, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnTurnAsync(class Microsoft.Bot.Builder.ITurnContext context, class Microsoft.Bot.Builder.NextDelegate nextTurn, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.NextDelegate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnTurnAsync (context As ITurnContext, nextTurn As NextDelegate, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.NextDelegate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.NextDelegate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="telemetryLoggerMiddleware.OnTurnAsync (context, nextTurn, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IMiddleware.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.NextDelegate,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="nextTurn" Type="Microsoft.Bot.Builder.NextDelegate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="context">The context object for this turn.</param>
        <param name="nextTurn">The delegate to call to continue the bot middleware pipeline.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Logs events for incoming, outgoing, updated, or deleted message activities, using the <see cref="P:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.TelemetryClient" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:Microsoft.Bot.Builder.ITurnContext" />
        <altmember cref="T:Microsoft.Bot.Schema.IActivity" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnUpdateActivityAsync (Microsoft.Bot.Schema.Activity activity, System.Threading.CancellationToken cancellation);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnUpdateActivityAsync(class Microsoft.Bot.Schema.Activity activity, valuetype System.Threading.CancellationToken cancellation) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.OnUpdateActivityAsync(Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUpdateActivityAsync (activity As Activity, cancellation As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnUpdateActivityAsync : Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="telemetryLoggerMiddleware.OnUpdateActivityAsync (activity, cancellation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellation" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="activity">Current activity sent from user.</param>
        <param name="cancellation">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Uses the telemetry client's
            <see cref="M:Microsoft.Bot.Builder.IBotTelemetryClient.TrackEvent(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IDictionary{System.String,System.Double})" /> method to
            log telemetry data when the bot updates a message it sent previously.
            The event name is <see cref="F:Microsoft.Bot.Builder.TelemetryLoggerConstants.BotMsgUpdateEvent" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TelemetryClient">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.IBotTelemetryClient TelemetryClient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Builder.IBotTelemetryClient TelemetryClient" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.TelemetryLoggerMiddleware.TelemetryClient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TelemetryClient As IBotTelemetryClient" />
      <MemberSignature Language="F#" Value="member this.TelemetryClient : Microsoft.Bot.Builder.IBotTelemetryClient" Usage="Microsoft.Bot.Builder.TelemetryLoggerMiddleware.TelemetryClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[Newtonsoft.Json.JsonIgnore]</AttributeName>
          <AttributeName Language="F#">[&lt;Newtonsoft.Json.JsonIgnore&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.IBotTelemetryClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets The telemetry client to send telemetry events to.
            </summary>
        <value>
            The <see cref="T:Microsoft.Bot.Builder.IBotTelemetryClient" /> this middleware uses to log events.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
