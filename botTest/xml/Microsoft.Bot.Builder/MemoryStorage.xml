<Type Name="MemoryStorage" FullName="Microsoft.Bot.Builder.MemoryStorage">
  <TypeSignature Language="C#" Value="public class MemoryStorage : Microsoft.Bot.Builder.IStorage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MemoryStorage extends System.Object implements class Microsoft.Bot.Builder.IStorage" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.MemoryStorage" />
  <TypeSignature Language="VB.NET" Value="Public Class MemoryStorage&#xA;Implements IStorage" />
  <TypeSignature Language="F#" Value="type MemoryStorage = class&#xA;    interface IStorage" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IStorage</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            A storage layer that uses an in-memory dictionary.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryStorage (System.Collections.Generic.Dictionary&lt;string,Newtonsoft.Json.Linq.JObject&gt; dictionary = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.Dictionary`2&lt;string, class Newtonsoft.Json.Linq.JObject&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.MemoryStorage.#ctor(System.Collections.Generic.Dictionary{System.String,Newtonsoft.Json.Linq.JObject})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (Optional dictionary As Dictionary(Of String, JObject) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.MemoryStorage : System.Collections.Generic.Dictionary&lt;string, Newtonsoft.Json.Linq.JObject&gt; -&gt; Microsoft.Bot.Builder.MemoryStorage" Usage="new Microsoft.Bot.Builder.MemoryStorage dictionary" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Generic.Dictionary&lt;System.String,Newtonsoft.Json.Linq.JObject&gt;" />
      </Parameters>
      <Docs>
        <param name="dictionary">A pre-existing dictionary to use; or null to use a new one.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.MemoryStorage" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MemoryStorage (Newtonsoft.Json.JsonSerializer jsonSerializer, System.Collections.Generic.Dictionary&lt;string,Newtonsoft.Json.Linq.JObject&gt; dictionary = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Newtonsoft.Json.JsonSerializer jsonSerializer, class System.Collections.Generic.Dictionary`2&lt;string, class Newtonsoft.Json.Linq.JObject&gt; dictionary) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.MemoryStorage.#ctor(Newtonsoft.Json.JsonSerializer,System.Collections.Generic.Dictionary{System.String,Newtonsoft.Json.Linq.JObject})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (jsonSerializer As JsonSerializer, Optional dictionary As Dictionary(Of String, JObject) = Nothing)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.MemoryStorage : Newtonsoft.Json.JsonSerializer * System.Collections.Generic.Dictionary&lt;string, Newtonsoft.Json.Linq.JObject&gt; -&gt; Microsoft.Bot.Builder.MemoryStorage" Usage="new Microsoft.Bot.Builder.MemoryStorage (jsonSerializer, dictionary)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="jsonSerializer" Type="Newtonsoft.Json.JsonSerializer" />
        <Parameter Name="dictionary" Type="System.Collections.Generic.Dictionary&lt;System.String,Newtonsoft.Json.Linq.JObject&gt;" />
      </Parameters>
      <Docs>
        <param name="jsonSerializer">If passing in a custom JsonSerializer, we recommend the following settings:
            <para>jsonSerializer.TypeNameHandling = TypeNameHandling.All.</para><para>jsonSerializer.NullValueHandling = NullValueHandling.Include.</para><para>jsonSerializer.ContractResolver = new DefaultContractResolver().</para></param>
        <param name="dictionary">A pre-existing dictionary to use; or null to use a new one.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.MemoryStorage" /> class.
            </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task DeleteAsync (string[] keys, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(string[] keys, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.MemoryStorage.DeleteAsync(System.String[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteAsync (keys As String(), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="memoryStorage.DeleteAsync (keys, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IStorage.DeleteAsync(System.String[],System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keys">keys of the <see cref="T:Microsoft.Bot.Builder.IStoreItem" /> objects to delete.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Deletes storage items from storage.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.MemoryStorage.ReadAsync(System.String[],System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.MemoryStorage.WriteAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="ReadAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;string,object&gt;&gt; ReadAsync (string[] keys, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class System.Collections.Generic.IDictionary`2&lt;string, object&gt;&gt; ReadAsync(string[] keys, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.MemoryStorage.ReadAsync(System.String[],System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function ReadAsync (keys As String(), cancellationToken As CancellationToken) As Task(Of IDictionary(Of String, Object))" />
      <MemberSignature Language="F#" Value="abstract member ReadAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;string, obj&gt;&gt;&#xA;override this.ReadAsync : string[] * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;string, obj&gt;&gt;" Usage="memoryStorage.ReadAsync (keys, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IStorage.ReadAsync(System.String[],System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String[]" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="keys">keys of the <see cref="T:Microsoft.Bot.Builder.IStoreItem" /> objects to read.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Reads storage items from storage.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the activities are successfully sent, the task result contains
            the items read, indexed by key.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.MemoryStorage.DeleteAsync(System.String[],System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.MemoryStorage.WriteAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="WriteAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WriteAsync (System.Collections.Generic.IDictionary&lt;string,object&gt; changes, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task WriteAsync(class System.Collections.Generic.IDictionary`2&lt;string, object&gt; changes, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.MemoryStorage.WriteAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function WriteAsync (changes As IDictionary(Of String, Object), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member WriteAsync : System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.WriteAsync : System.Collections.Generic.IDictionary&lt;string, obj&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="memoryStorage.WriteAsync (changes, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IStorage.WriteAsync(System.Collections.Generic.IDictionary{System.String,System.Object},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="changes" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="changes">The items to write, indexed by key.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Writes storage items to storage.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:Microsoft.Bot.Builder.MemoryStorage.DeleteAsync(System.String[],System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.MemoryStorage.ReadAsync(System.String[],System.Threading.CancellationToken)" />
      </Docs>
    </Member>
  </Members>
</Type>
