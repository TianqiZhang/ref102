<Type Name="BotState" FullName="Microsoft.Bot.Builder.BotState">
  <TypeSignature Language="C#" Value="public abstract class BotState : Microsoft.Bot.Builder.IPropertyManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BotState extends System.Object implements class Microsoft.Bot.Builder.IPropertyManager" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.BotState" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BotState&#xA;Implements IPropertyManager" />
  <TypeSignature Language="F#" Value="type BotState = class&#xA;    interface IPropertyManager" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IPropertyManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
             Defines a state management object and automates the reading and writing of associated state
             properties to a storage layer.
             </summary>
    <remarks>
             Each state management object defines a scope for a storage layer.
            
             State properties are created within a state management scope, and the Bot Framework
             defines these scopes:
             <see cref="T:Microsoft.Bot.Builder.ConversationState" />, <see cref="T:Microsoft.Bot.Builder.UserState" />, and <see cref="T:Microsoft.Bot.Builder.PrivateConversationState" />.
            
             You can define additional scopes for your bot.
             </remarks>
    <altmember cref="T:Microsoft.Bot.Builder.IStorage" />
    <altmember cref="T:Microsoft.Bot.Builder.IStatePropertyAccessor`1" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BotState (Microsoft.Bot.Builder.IStorage storage, string contextServiceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Builder.IStorage storage, string contextServiceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.#ctor(Microsoft.Bot.Builder.IStorage,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (storage As IStorage, contextServiceKey As String)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Builder.BotState : Microsoft.Bot.Builder.IStorage * string -&gt; Microsoft.Bot.Builder.BotState" Usage="new Microsoft.Bot.Builder.BotState (storage, contextServiceKey)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="storage" Type="Microsoft.Bot.Builder.IStorage" />
        <Parameter Name="contextServiceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="storage">The storage layer this state management object will use to store
            and retrieve state.</param>
        <param name="contextServiceKey">The key for the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState" />.</param>
        <summary>
            Initializes a new instance of the <see cref="T:Microsoft.Bot.Builder.BotState" /> class.
            </summary>
        <remarks>This constructor creates a state management object and associated scope.
            The object uses <paramref name="storage" /> to persist state property values.
            The object uses the <paramref name="contextServiceKey" /> to cache state within the context for each turn.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="storage" /> or <paramref name="contextServiceKey" />
            is <c>null</c>.</exception>
        <altmember cref="T:Microsoft.Bot.Builder.ITurnContext" />
      </Docs>
    </Member>
    <Member MemberName="ClearStateAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task ClearStateAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task ClearStateAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.ClearStateAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ClearStateAsync (turnContext As ITurnContext, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member ClearStateAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.ClearStateAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botState.ClearStateAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Clears the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>This method clears the state cache in the turn context. Call
            <see cref="M:Microsoft.Bot.Builder.BotState.SaveChangesAsync(Microsoft.Bot.Builder.ITurnContext,System.Boolean,System.Threading.CancellationToken)" /> to persist this
            change in the storage layer.
            </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.IStatePropertyAccessor&lt;T&gt; CreateProperty&lt;T&gt; (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class Microsoft.Bot.Builder.IStatePropertyAccessor`1&lt;!!T&gt; CreateProperty&lt;T&gt;(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.CreateProperty``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProperty(Of T) (name As String) As IStatePropertyAccessor(Of T)" />
      <MemberSignature Language="F#" Value="abstract member CreateProperty : string -&gt; Microsoft.Bot.Builder.IStatePropertyAccessor&lt;'T&gt;&#xA;override this.CreateProperty : string -&gt; Microsoft.Bot.Builder.IStatePropertyAccessor&lt;'T&gt;" Usage="botState.CreateProperty name" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IPropertyManager.CreateProperty``1(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.IStatePropertyAccessor&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">The value type of the property.</typeparam>
        <param name="name">The name of the property.</param>
        <summary>
            Creates a named state property within the scope of a <see cref="T:Microsoft.Bot.Builder.BotState" /> and returns
            an accessor for the property.
            </summary>
        <returns>An accessor for the property.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task DeleteAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task DeleteAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.DeleteAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DeleteAsync (turnContext As ITurnContext, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member DeleteAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.DeleteAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botState.DeleteAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Deletes any state in storage and the cache for this <see cref="T:Microsoft.Bot.Builder.BotState" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeletePropertyValueAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task DeletePropertyValueAsync (Microsoft.Bot.Builder.ITurnContext turnContext, string propertyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task DeletePropertyValueAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, string propertyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.DeletePropertyValueAsync(Microsoft.Bot.Builder.ITurnContext,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Function DeletePropertyValueAsync (turnContext As ITurnContext, propertyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.DeletePropertyValueAsync : Microsoft.Bot.Builder.ITurnContext * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botState.DeletePropertyValueAsync (turnContext, propertyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="propertyName">The name of the property.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Deletes a property from the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> or
            <paramref name="propertyName" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public Newtonsoft.Json.Linq.JToken Get (Microsoft.Bot.Builder.ITurnContext turnContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Newtonsoft.Json.Linq.JToken Get(class Microsoft.Bot.Builder.ITurnContext turnContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.Get(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function Get (turnContext As ITurnContext) As JToken" />
      <MemberSignature Language="F#" Value="member this.Get : Microsoft.Bot.Builder.ITurnContext -&gt; Newtonsoft.Json.Linq.JToken" Usage="botState.Get turnContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Newtonsoft.Json.Linq.JToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <summary>
            Gets a copy of the raw cached data for this <see cref="T:Microsoft.Bot.Builder.BotState" /> from the turn context.
            </summary>
        <returns>A JSON representation of the cached state.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetCachedState">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Builder.BotState.CachedBotState GetCachedState (Microsoft.Bot.Builder.ITurnContext turnContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Bot.Builder.BotState/CachedBotState GetCachedState(class Microsoft.Bot.Builder.ITurnContext turnContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.GetCachedState(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCachedState (turnContext As ITurnContext) As BotState.CachedBotState" />
      <MemberSignature Language="F#" Value="member this.GetCachedState : Microsoft.Bot.Builder.ITurnContext -&gt; Microsoft.Bot.Builder.BotState.CachedBotState" Usage="botState.GetCachedState turnContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.BotState+CachedBotState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <summary>
            Gets the cached bot state instance that wraps the raw cached data for this <see cref="T:Microsoft.Bot.Builder.BotState" />
            from the turn context.
            </summary>
        <returns>The cached bot state instance.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueAsync&lt;T&gt;">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task&lt;T&gt; GetPropertyValueAsync&lt;T&gt; (Microsoft.Bot.Builder.ITurnContext turnContext, string propertyName, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task`1&lt;!!T&gt; GetPropertyValueAsync&lt;T&gt;(class Microsoft.Bot.Builder.ITurnContext turnContext, string propertyName, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.GetPropertyValueAsync``1(Microsoft.Bot.Builder.ITurnContext,System.String,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetPropertyValueAsync(Of T) (turnContext As ITurnContext, propertyName As String, Optional cancellationToken As CancellationToken = Nothing) As Task(Of T)" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValueAsync : Microsoft.Bot.Builder.ITurnContext * string * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;'T&gt;" Usage="botState.GetPropertyValueAsync (turnContext, propertyName, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="T">The value type of the property.</typeparam>
        <param name="turnContext">The context object for this turn.</param>
        <param name="propertyName">The name of the property.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Gets the value of a property from the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>If the task is successful, the result contains the property value, otherwise it will be default(T).</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> or
            <paramref name="propertyName" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetStorageKey">
      <MemberSignature Language="C#" Value="protected abstract string GetStorageKey (Microsoft.Bot.Builder.ITurnContext turnContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetStorageKey(class Microsoft.Bot.Builder.ITurnContext turnContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.GetStorageKey(Microsoft.Bot.Builder.ITurnContext)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetStorageKey (turnContext As ITurnContext) As String" />
      <MemberSignature Language="F#" Value="abstract member GetStorageKey : Microsoft.Bot.Builder.ITurnContext -&gt; string" Usage="botState.GetStorageKey turnContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <summary>
            When overridden in a derived class, gets the key to use when reading and writing state to and from storage.
            </summary>
        <returns>The storage key.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task LoadAsync (Microsoft.Bot.Builder.ITurnContext turnContext, bool force = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task LoadAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, bool force, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.LoadAsync(Microsoft.Bot.Builder.ITurnContext,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function LoadAsync (turnContext As ITurnContext, Optional force As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member LoadAsync : Microsoft.Bot.Builder.ITurnContext * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.LoadAsync : Microsoft.Bot.Builder.ITurnContext * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botState.LoadAsync (turnContext, force, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="force" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="force">Optional, <c>true</c> to overwrite any existing state cache;
            or <c>false</c> to load state from storage only if the cache doesn't already exist.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Populates the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState" /> from the storage layer.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="SaveChangesAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task SaveChangesAsync (Microsoft.Bot.Builder.ITurnContext turnContext, bool force = false, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task SaveChangesAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, bool force, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.SaveChangesAsync(Microsoft.Bot.Builder.ITurnContext,System.Boolean,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SaveChangesAsync (turnContext As ITurnContext, Optional force As Boolean = false, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member SaveChangesAsync : Microsoft.Bot.Builder.ITurnContext * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.SaveChangesAsync : Microsoft.Bot.Builder.ITurnContext * bool * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botState.SaveChangesAsync (turnContext, force, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="force" Type="System.Boolean" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="force">Optional, <c>true</c> to save the state cache to storage;
            or <c>false</c> to save state to storage only if a property in the cache has changed.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Writes the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState" /> to the storage layer.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPropertyValueAsync">
      <MemberSignature Language="C#" Value="protected System.Threading.Tasks.Task SetPropertyValueAsync (Microsoft.Bot.Builder.ITurnContext turnContext, string propertyName, object value, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Threading.Tasks.Task SetPropertyValueAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, string propertyName, object value, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.BotState.SetPropertyValueAsync(Microsoft.Bot.Builder.ITurnContext,System.String,System.Object,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Function SetPropertyValueAsync (turnContext As ITurnContext, propertyName As String, value As Object, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="member this.SetPropertyValueAsync : Microsoft.Bot.Builder.ITurnContext * string * obj * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="botState.SetPropertyValueAsync (turnContext, propertyName, value, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="propertyName">The name of the property to set.</param>
        <param name="value">The value to set on the property.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Sets the value of a property in the state cache for this <see cref="T:Microsoft.Bot.Builder.BotState" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="turnContext" /> or
            <paramref name="propertyName" /> is <c>null</c>.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
