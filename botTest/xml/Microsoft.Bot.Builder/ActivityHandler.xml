<Type Name="ActivityHandler" FullName="Microsoft.Bot.Builder.ActivityHandler">
  <TypeSignature Language="C#" Value="public class ActivityHandler : Microsoft.Bot.Builder.IBot" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActivityHandler extends System.Object implements class Microsoft.Bot.Builder.IBot" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.ActivityHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class ActivityHandler&#xA;Implements IBot" />
  <TypeSignature Language="F#" Value="type ActivityHandler = class&#xA;    interface IBot" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IBot</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            An implementation of the <see cref="T:Microsoft.Bot.Builder.IBot" /> interface, intended for further subclassing.
            </summary>
    <remarks>
            Derive from this class to plug in code to handle particular activity types.
            Pre- and post-processing of <see cref="T:Microsoft.Bot.Schema.Activity" /> objects can be added by calling
            the base class implementation from the derived class.
            </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActivityHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInvokeResponse">
      <MemberSignature Language="C#" Value="protected static Microsoft.Bot.Builder.InvokeResponse CreateInvokeResponse (object body = default);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class Microsoft.Bot.Builder.InvokeResponse CreateInvokeResponse(object body) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.CreateInvokeResponse(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateInvokeResponse (Optional body As Object = Nothing) As InvokeResponse" />
      <MemberSignature Language="F#" Value="static member CreateInvokeResponse : obj -&gt; Microsoft.Bot.Builder.InvokeResponse" Usage="Microsoft.Bot.Builder.ActivityHandler.CreateInvokeResponse body" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Builder.InvokeResponse</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="body" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="body">JSON serialized content from a POST response.</param>
        <summary>
            An <see cref="T:Microsoft.Bot.Builder.InvokeResponse" /> factory that initializes the body to the parameter passed and status equal to OK.
            </summary>
        <returns>A new <see cref="T:Microsoft.Bot.Builder.InvokeResponse" /> object.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAdaptiveCardInvokeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt; OnAdaptiveCardInvokeAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, Microsoft.Bot.Schema.AdaptiveCardInvokeValue invokeValue, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt; OnAdaptiveCardInvokeAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, class Microsoft.Bot.Schema.AdaptiveCardInvokeValue invokeValue, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnAdaptiveCardInvokeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},Microsoft.Bot.Schema.AdaptiveCardInvokeValue,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAdaptiveCardInvokeAsync (turnContext As ITurnContext(Of IInvokeActivity), invokeValue As AdaptiveCardInvokeValue, cancellationToken As CancellationToken) As Task(Of AdaptiveCardInvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnAdaptiveCardInvokeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * Microsoft.Bot.Schema.AdaptiveCardInvokeValue * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt;&#xA;override this.OnAdaptiveCardInvokeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * Microsoft.Bot.Schema.AdaptiveCardInvokeValue * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt;" Usage="activityHandler.OnAdaptiveCardInvokeAsync (turnContext, invokeValue, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Schema.AdaptiveCardInvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="invokeValue" Type="Microsoft.Bot.Schema.AdaptiveCardInvokeValue" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="invokeValue">A stringly-typed object from the incoming activity's Value.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when the bot is sent an Adaptive Card Action Execute.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" />
            method receives an Invoke with a <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> of `adaptiveCard/action`,
            it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnCommandActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnCommandActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnCommandActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.ICommandActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnCommandActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCommandActivityAsync (turnContext As ITurnContext(Of ICommandActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnCommandActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnCommandActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnCommandActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a command activity is received when the base behavior of
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> is used.
             Commands are requests to perform an action and receivers typically respond with
             one or more commandResult activities. Receivers are also expected to explicitly
             reject unsupported command activities.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
             method receives a command activity, it calls this method.
             
             In a derived class, override this method to add logic that applies to all comand activities.
             Add logic to apply before the specific command-handling logic before the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnCommandActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandActivity},System.Threading.CancellationToken)" /> method.
             Add logic to apply after the specific command-handling logic after the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnCommandActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandActivity},System.Threading.CancellationToken)" /> method.
            
             Command activities communicate programmatic information from a client or channel to a bot.
             The meaning of an command activity is defined by the <see cref="P:Microsoft.Bot.Schema.ICommandActivity.Name" /> property,
             which is meaningful within the scope of a channel.
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnCommandActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnCommandResultActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnCommandResultActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandResultActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnCommandResultActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.ICommandResultActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnCommandResultActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandResultActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCommandResultActivityAsync (turnContext As ITurnContext(Of ICommandResultActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnCommandResultActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandResultActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnCommandResultActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandResultActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnCommandResultActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ICommandResultActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a CommandResult activity is received when the base behavior of
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> is used.
             CommandResult activities can be used to communicate the result of a command execution.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
             method receives a CommandResult activity, it calls this method.
             
             In a derived class, override this method to add logic that applies to all comand activities.
             Add logic to apply before the specific CommandResult-handling logic before the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnCommandResultActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandResultActivity},System.Threading.CancellationToken)" /> method.
             Add logic to apply after the specific CommandResult-handling logic after the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnCommandResultActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandResultActivity},System.Threading.CancellationToken)" /> method.
            
             CommandResult activities communicate programmatic information from a client or channel to a bot.
             The meaning of an CommandResult activity is defined by the <see cref="P:Microsoft.Bot.Schema.ICommandResultActivity.Name" /> property,
             which is meaningful within the scope of a channel.
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnCommandResultActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ICommandResultActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnConversationUpdateActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnConversationUpdateActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnConversationUpdateActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnConversationUpdateActivityAsync (turnContext As ITurnContext(Of IConversationUpdateActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnConversationUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnConversationUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnConversationUpdateActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a conversation update activity is received from the channel when the base behavior of
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> is used.
             Conversation update activities are useful when it comes to responding to users being added to or removed from the conversation.
             For example, a bot could respond to a user being added by greeting the user.
             By default, this method will call <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
             if any users have been added or <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
             if any users have been removed. The method checks the member ID so that it only responds to updates regarding members other than the bot itself.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
             method receives a conversation update activity, it calls this method.
             If the conversation update activity indicates that members other than the bot joined the conversation, it calls
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />.
             If the conversation update activity indicates that members other than the bot left the conversation, it calls
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />.
            
             In a derived class, override this method to add logic that applies to all conversation update activities.
             Add logic to apply before the member added or removed logic before the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" /> method.
             Add logic to apply after the member added or removed logic after the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" /> method.
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnEndOfConversationActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnEndOfConversationActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEndOfConversationActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnEndOfConversationActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEndOfConversationActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnEndOfConversationActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEndOfConversationActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnEndOfConversationActivityAsync (turnContext As ITurnContext(Of IEndOfConversationActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnEndOfConversationActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEndOfConversationActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnEndOfConversationActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEndOfConversationActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnEndOfConversationActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEndOfConversationActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.EndOfConversation" /> activities, such as the conversational logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
            method receives a message activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnEventActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnEventActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnEventActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnEventActivityAsync (turnContext As ITurnContext(Of IEventActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnEventActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnEventActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnEventActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when an event activity is received from the connector when the base behavior of
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> is used.
             Event activities can be used to communicate many different things.
             By default, this method will call <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" /> if the
             activity's name is <c>tokens/response</c> or <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" /> otherwise.
             A <c>tokens/response</c> event can be triggered by an <see cref="T:Microsoft.Bot.Schema.OAuthCard" />.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
             method receives an event activity, it calls this method.
             If the event <see cref="P:Microsoft.Bot.Schema.IEventActivity.Name" /> is `tokens/response`, it calls
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />;
             otherwise, it calls <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />.
            
             In a derived class, override this method to add logic that applies to all event activities.
             Add logic to apply before the specific event-handling logic before the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" /> method.
             Add logic to apply after the specific event-handling logic after the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" /> method.
            
             Event activities communicate programmatic information from a client or channel to a bot.
             The meaning of an event activity is defined by the <see cref="P:Microsoft.Bot.Schema.IEventActivity.Name" /> property,
             which is meaningful within the scope of a channel.
             A `tokens/response` event can be triggered by an <see cref="T:Microsoft.Bot.Schema.OAuthCard" /> or an OAuth prompt.
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnEventAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnEventAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnEventAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnEventAsync (turnContext As ITurnContext(Of IEventActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnEventAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnEventAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnEventAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an event other than <c>tokens/response</c> is received when the base behavior of
            <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" /> is used.
            This method could optionally be overridden if the bot is meant to handle miscellaneous events.
            By default, this method does nothing.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
            method receives an event with a <see cref="P:Microsoft.Bot.Schema.IEventActivity.Name" /> other than `tokens/response`,
            it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnInstallationUpdateActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnInstallationUpdateActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnInstallationUpdateActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnInstallationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInstallationUpdateActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInstallationUpdateActivityAsync (turnContext As ITurnContext(Of IInstallationUpdateActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnInstallationUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnInstallationUpdateActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnInstallationUpdateActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.InstallationUpdate" /> activities.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
            method receives a installation update activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnInstallationUpdateAddAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnInstallationUpdateAddAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnInstallationUpdateAddAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnInstallationUpdateAddAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInstallationUpdateActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInstallationUpdateAddAsync (turnContext As ITurnContext(Of IInstallationUpdateActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnInstallationUpdateAddAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnInstallationUpdateAddAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnInstallationUpdateAddAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.InstallationUpdate" /> activities with 'action' set to 'add'.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
            method receives a installation update activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnInstallationUpdateRemoveAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnInstallationUpdateRemoveAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnInstallationUpdateRemoveAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnInstallationUpdateRemoveAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInstallationUpdateActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInstallationUpdateRemoveAsync (turnContext As ITurnContext(Of IInstallationUpdateActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnInstallationUpdateRemoveAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnInstallationUpdateRemoveAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnInstallationUpdateRemoveAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInstallationUpdateActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.InstallationUpdate" /> activities with 'action' set to 'remove'.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
            method receives a installation update activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnInvokeActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt; OnInvokeActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Bot.Builder.InvokeResponse&gt; OnInvokeActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnInvokeActivityAsync (turnContext As ITurnContext(Of IInvokeActivity), cancellationToken As CancellationToken) As Task(Of InvokeResponse)" />
      <MemberSignature Language="F#" Value="abstract member OnInvokeActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;&#xA;override this.OnInvokeActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;" Usage="activityHandler.OnInvokeActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Bot.Builder.InvokeResponse&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an invoke activity is received from the connector when the base behavior of
            <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> is used.
            Invoke activities can be used to communicate many different things.
            By default, this method will call <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnSignInInvokeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" /> if the
            activity's name is <c>signin/verifyState</c> or <c>signin/tokenExchange</c>.
            A <c>signin/verifyState</c> or <c>signin/tokenExchange</c> invoke can be triggered by an <see cref="T:Microsoft.Bot.Schema.OAuthCard" />.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
            method receives an invoke activity, it calls this method.
            If the event <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> is `signin/verifyState` or `signin/tokenExchange`, it calls
            <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnSignInInvokeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" />
            Invoke activities communicate programmatic commands from a client or channel to a bot.
            The meaning of an invoke activity is defined by the <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> property,
            which is meaningful within the scope of a channel.
            A `signin/verifyState` or `signin/tokenExchange` invoke can be triggered by an <see cref="T:Microsoft.Bot.Schema.OAuthCard" /> or an OAuth prompt.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMembersAddedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMembersAddedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; membersAdded, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMembersAddedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; membersAdded, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnMembersAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMembersAddedAsync (membersAdded As IList(Of ChannelAccount), turnContext As ITurnContext(Of IConversationUpdateActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMembersAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMembersAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnMembersAddedAsync (membersAdded, turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="membersAdded" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="membersAdded">A list of all the members added to the conversation, as
            described by the conversation update activity.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when members other than the bot
            join the conversation, such as your bot's welcome logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
            method receives a conversation update activity that indicates one or more users other than the bot
            are joining the conversation, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMembersRemovedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMembersRemovedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; membersRemoved, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMembersRemovedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.ChannelAccount&gt; membersRemoved, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IConversationUpdateActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnMembersRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.ChannelAccount},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMembersRemovedAsync (membersRemoved As IList(Of ChannelAccount), turnContext As ITurnContext(Of IConversationUpdateActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMembersRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMembersRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnMembersRemovedAsync (membersRemoved, turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="membersRemoved" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.ChannelAccount&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IConversationUpdateActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="membersRemoved">A list of all the members removed from the conversation, as
            described by the conversation update activity.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when members other than the bot
            leave the conversation, such as your bot's good-bye logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
            method receives a conversation update activity that indicates one or more users other than the bot
            are leaving the conversation, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMessageActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageActivityAsync (turnContext As ITurnContext(Of IMessageActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnMessageActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.Message" /> activities, such as the conversational logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
            method receives a message activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnMessageReactionActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnMessageReactionActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnMessageReactionActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnMessageReactionActivityAsync (turnContext As ITurnContext(Of IMessageReactionActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnMessageReactionActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnMessageReactionActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnMessageReactionActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when an event activity is received from the connector when the base behavior of
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> is used.
             Message reactions correspond to the user adding a 'like' or 'sad' etc. (often an emoji) to a
             previously sent activity. Message reactions are only supported by a few channels.
             The activity that the message reaction corresponds to is indicated in the replyToId property.
             The value of this property is the activity id of a previously sent activity given back to the
             bot as the response from a send call.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
             method receives a message reaction activity, it calls this method.
             If the message reaction indicates that reactions were added to a message, it calls
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnReactionsAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />.
             If the message reaction indicates that reactions were removed from a message, it calls
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnReactionsRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />.
            
             In a derived class, override this method to add logic that applies to all message reaction activities.
             Add logic to apply before the reactions added or removed logic before the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" /> method.
             Add logic to apply after the reactions added or removed logic after the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" /> method.
            
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnReactionsAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnReactionsRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnReactionsAddedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnReactionsAddedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; messageReactions, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnReactionsAddedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.MessageReaction&gt; messageReactions, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnReactionsAddedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnReactionsAddedAsync (messageReactions As IList(Of MessageReaction), turnContext As ITurnContext(Of IMessageReactionActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnReactionsAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnReactionsAddedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnReactionsAddedAsync (messageReactions, turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageReactions" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageReactions">The list of reactions added.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when reactions to a previous activity
            are added to the conversation.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            Message reactions correspond to the user adding a 'like' or 'sad' etc. (often an emoji) to a
            previously sent message on the conversation. Message reactions are supported by only a few channels.
            The activity that the message is in reaction to is identified by the activity's
            <see cref="P:Microsoft.Bot.Schema.Activity.ReplyToId" /> property. The value of this property is the activity ID
            of a previously sent activity. When the bot sends an activity, the channel assigns an ID to it,
            which is available in the <see cref="P:Microsoft.Bot.Schema.ResourceResponse.Id" /> of the result.
            </remarks>
        <altmember cref="P:Microsoft.Bot.Schema.Activity.Id" />
        <altmember cref="M:Microsoft.Bot.Builder.ITurnContext.SendActivityAsync(Microsoft.Bot.Schema.IActivity,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.ResourceResponse.Id" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnReactionsRemovedAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnReactionsRemovedAsync (System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; messageReactions, Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnReactionsRemovedAsync(class System.Collections.Generic.IList`1&lt;class Microsoft.Bot.Schema.MessageReaction&gt; messageReactions, class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IMessageReactionActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnReactionsRemovedAsync(System.Collections.Generic.IList{Microsoft.Bot.Schema.MessageReaction},Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnReactionsRemovedAsync (messageReactions As IList(Of MessageReaction), turnContext As ITurnContext(Of IMessageReactionActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnReactionsRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnReactionsRemovedAsync : System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt; * Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnReactionsRemovedAsync (messageReactions, turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageReactions" Type="System.Collections.Generic.IList&lt;Microsoft.Bot.Schema.MessageReaction&gt;" />
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IMessageReactionActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="messageReactions">The list of reactions removed.</param>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic for when reactions to a previous activity
            are removed from the conversation.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            Message reactions correspond to the user adding a 'like' or 'sad' etc. (often an emoji) to a
            previously sent message on the conversation. Message reactions are supported by only a few channels.
            The activity that the message is in reaction to is identified by the activity's
            <see cref="P:Microsoft.Bot.Schema.Activity.ReplyToId" /> property. The value of this property is the activity ID
            of a previously sent activity. When the bot sends an activity, the channel assigns an ID to it,
            which is available in the <see cref="P:Microsoft.Bot.Schema.ResourceResponse.Id" /> of the result.
            </remarks>
        <altmember cref="P:Microsoft.Bot.Schema.Activity.Id" />
        <altmember cref="M:Microsoft.Bot.Builder.ITurnContext.SendActivityAsync(Microsoft.Bot.Schema.IActivity,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.ResourceResponse.Id" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInInvokeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnSignInInvokeAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnSignInInvokeAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IInvokeActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnSignInInvokeAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnSignInInvokeAsync (turnContext As ITurnContext(Of IInvokeActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnSignInInvokeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnSignInInvokeAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnSignInInvokeAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IInvokeActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a <c>signin/verifyState</c> or <c>signin/tokenExchange</c> event is received when the base behavior of
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" /> is used.
             If using an <c>OAuthPrompt</c>, override this method to forward this <see cref="T:Microsoft.Bot.Schema.Activity" /> to the current dialog.
             By default, this method does nothing.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" />
             method receives an Invoke with a <see cref="P:Microsoft.Bot.Schema.IInvokeActivity.Name" /> of `tokens/response`,
             it calls this method.
            
             If your bot uses the <c>OAuthPrompt</c>, forward the incoming <see cref="T:Microsoft.Bot.Schema.Activity" /> to
             the current dialog.
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnInvokeActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IInvokeActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnTokenResponseEventAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTokenResponseEventAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTokenResponseEventAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.IEventActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnTokenResponseEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTokenResponseEventAsync (turnContext As ITurnContext(Of IEventActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTokenResponseEventAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTokenResponseEventAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnTokenResponseEventAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.IEventActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Invoked when a <c>tokens/response</c> event is received when the base behavior of
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" /> is used.
             If using an <c>OAuthPrompt</c>, override this method to forward this <see cref="T:Microsoft.Bot.Schema.Activity" /> to the current dialog.
             By default, this method does nothing.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
             method receives an event with a <see cref="P:Microsoft.Bot.Schema.IEventActivity.Name" /> of `tokens/response`,
             it calls this method.
            
             If your bot uses the <c>OAuthPrompt</c>, forward the incoming <see cref="T:Microsoft.Bot.Schema.Activity" /> to
             the current dialog.
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnTurnAsync">
      <MemberSignature Language="C#" Value="public virtual System.Threading.Tasks.Task OnTurnAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task OnTurnAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function OnTurnAsync (turnContext As ITurnContext, Optional cancellationToken As CancellationToken = Nothing) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnTurnAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IBot.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
             or threads to receive notice of cancellation.</param>
        <summary>
             Called by the adapter (for example, a <see cref="T:Microsoft.Bot.Builder.BotFrameworkAdapter" />)
             at runtime in order to process an inbound <see cref="T:Microsoft.Bot.Schema.Activity" />.
             </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
             This method calls other methods in this class based on the type of the activity to
             process, which allows a derived class to provide type-specific logic in a controlled way.
            
             In a derived class, override this method to add logic that applies to all activity types.
             Add logic to apply before the type-specific logic before the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> method.
             Add logic to apply after the type-specific logic after the call to the base class
             <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> method.
             </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnUnrecognizedActivityTypeAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.Activity.Type" />
        <altmember cref="T:Microsoft.Bot.Schema.ActivityTypes" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageActivity},System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnTypingActivityAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnTypingActivityAsync (Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ITypingActivity&gt; turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnTypingActivityAsync(class Microsoft.Bot.Builder.ITurnContext`1&lt;class Microsoft.Bot.Schema.ITypingActivity&gt; turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnTypingActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.ITypingActivity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTypingActivityAsync (turnContext As ITurnContext(Of ITypingActivity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnTypingActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ITypingActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnTypingActivityAsync : Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ITypingActivity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnTypingActivityAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext&lt;Microsoft.Bot.Schema.ITypingActivity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">A strongly-typed context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Override this in a derived class to provide logic specific to
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.Typing" /> activities, such as the conversational logic.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
            method receives a message activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
    <Member MemberName="OnUnrecognizedActivityTypeAsync">
      <MemberSignature Language="C#" Value="protected virtual System.Threading.Tasks.Task OnUnrecognizedActivityTypeAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OnUnrecognizedActivityTypeAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.ActivityHandler.OnUnrecognizedActivityTypeAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnUnrecognizedActivityTypeAsync (turnContext As ITurnContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OnUnrecognizedActivityTypeAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.OnUnrecognizedActivityTypeAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="activityHandler.OnUnrecognizedActivityTypeAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The context object for this turn.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects
            or threads to receive notice of cancellation.</param>
        <summary>
            Invoked when an activity other than a message, conversation update, or event is received when the base behavior of
            <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" /> is used.
            If overridden, this could potentially respond to any of the other activity types like
            <see cref="F:Microsoft.Bot.Schema.ActivityTypes.ContactRelationUpdate" /> or <see cref="F:Microsoft.Bot.Schema.ActivityTypes.EndOfConversation" />.
            By default, this method does nothing.
            </summary>
        <returns>A task that represents the work queued to execute.</returns>
        <remarks>
            When the <see cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
            method receives an activity that is not a message, conversation update, message reaction,
            or event activity, it calls this method.
            </remarks>
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnConversationUpdateActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IConversationUpdateActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnMessageReactionActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IMessageReactionActivity},System.Threading.CancellationToken)" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnEventActivityAsync(Microsoft.Bot.Builder.ITurnContext{Microsoft.Bot.Schema.IEventActivity},System.Threading.CancellationToken)" />
        <altmember cref="P:Microsoft.Bot.Schema.Activity.Type" />
        <altmember cref="T:Microsoft.Bot.Schema.ActivityTypes" />
        <altmember cref="M:Microsoft.Bot.Builder.ActivityHandler.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      </Docs>
    </Member>
  </Members>
</Type>
