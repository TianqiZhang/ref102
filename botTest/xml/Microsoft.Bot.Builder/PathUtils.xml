<Type Name="PathUtils" FullName="Microsoft.Bot.Builder.PathUtils">
  <TypeSignature Language="C#" Value="public static class PathUtils" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PathUtils extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.PathUtils" />
  <TypeSignature Language="VB.NET" Value="Public Class PathUtils" />
  <TypeSignature Language="F#" Value="type PathUtils = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
            A utilities class of file path operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="NormalizePath">
      <MemberSignature Language="C#" Value="public static string NormalizePath (string ambigiousPath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string NormalizePath(string ambigiousPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.PathUtils.NormalizePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function NormalizePath (ambigiousPath As String) As String" />
      <MemberSignature Language="F#" Value="static member NormalizePath : string -&gt; string" Usage="Microsoft.Bot.Builder.PathUtils.NormalizePath ambigiousPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ambigiousPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ambigiousPath">authoredPath.</param>
        <summary>
            Normalizes authored path to OS-compatible path.
            </summary>
        <returns>path expressed as OS path.</returns>
        <remarks>
            Path is from authored content which doesn't know what OS it is running on.
            This method treats / and \ both as separators regardless of OS, for Windows that means
            changing all `/` characters to `/`, and for Linux/Mac `\` to `/`.
            This allows author to use ../foo.lg or ..\foo.lg as equivalents for importing.
            </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
