<Type Name="InterceptionMiddleware" FullName="Microsoft.Bot.Builder.InterceptionMiddleware">
  <TypeSignature Language="C#" Value="public abstract class InterceptionMiddleware : Microsoft.Bot.Builder.IMiddleware" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit InterceptionMiddleware extends System.Object implements class Microsoft.Bot.Builder.IMiddleware" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Builder.InterceptionMiddleware" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class InterceptionMiddleware&#xA;Implements IMiddleware" />
  <TypeSignature Language="F#" Value="type InterceptionMiddleware = class&#xA;    interface IMiddleware" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
    <AssemblyVersion>4.10.3.0</AssemblyVersion>
    <AssemblyVersion>4.14.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Builder.IMiddleware</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Middleware for the interception of activities.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="InboundAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task&lt;(bool,bool)&gt; InboundAsync (Microsoft.Bot.Builder.ITurnContext turnContext, Microsoft.Bot.Schema.Activity traceActivity, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;valuetype System.ValueTuple`2&lt;bool, bool&gt;&gt; InboundAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class Microsoft.Bot.Schema.Activity traceActivity, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.InterceptionMiddleware.InboundAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Schema.Activity,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function InboundAsync (turnContext As ITurnContext, traceActivity As Activity, cancellationToken As CancellationToken) As Task(Of ValueTuple(Of Boolean, Boolean))" />
      <MemberSignature Language="F#" Value="abstract member InboundAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Schema.Activity * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;ValueTuple&lt;bool, bool&gt;&gt;" Usage="interceptionMiddleware.InboundAsync (turnContext, traceActivity, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.ValueTuple&lt;System.Boolean,System.Boolean&gt;&gt;</ReturnType>
        <Attributes>
          <Attribute>
            <AttributeName Language="C#">[System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "shouldForwardToApplication", "shouldIntercept" })]</AttributeName>
            <AttributeName Language="F#">[&lt;System.Runtime.CompilerServices.TupleElementNames(new System.String[] { "shouldForwardToApplication", "shouldIntercept" })&gt;]</AttributeName>
          </Attribute>
        </Attributes>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="traceActivity" Type="Microsoft.Bot.Schema.Activity" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The turn context.</param>
        <param name="traceActivity">The trace activity.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Overriding methods implement processing of inbound activities.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Logger">
      <MemberSignature Language="C#" Value="protected Microsoft.Extensions.Logging.ILogger Logger { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Extensions.Logging.ILogger Logger" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Builder.InterceptionMiddleware.Logger" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Logger As ILogger" />
      <MemberSignature Language="F#" Value="member this.Logger : Microsoft.Extensions.Logging.ILogger" Usage="Microsoft.Bot.Builder.InterceptionMiddleware.Logger" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Extensions.Logging.ILogger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets the logger for the current object.
            </summary>
        <value>
            The logger for the current object.
            </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Microsoft.Bot.Builder.IMiddleware.OnTurnAsync">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Task IMiddleware.OnTurnAsync (Microsoft.Bot.Builder.ITurnContext turnContext, Microsoft.Bot.Builder.NextDelegate next, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Threading.Tasks.Task Microsoft.Bot.Builder.IMiddleware.OnTurnAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class Microsoft.Bot.Builder.NextDelegate next, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.InterceptionMiddleware.Microsoft#Bot#Builder#IMiddleware#OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.NextDelegate,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Function OnTurnAsync (turnContext As ITurnContext, next As NextDelegate, cancellationToken As CancellationToken) As Task Implements IMiddleware.OnTurnAsync" />
      <MemberSignature Language="F#" Value="abstract member Microsoft.Bot.Builder.IMiddleware.OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.NextDelegate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&#xA;override this.Microsoft.Bot.Builder.IMiddleware.OnTurnAsync : Microsoft.Bot.Builder.ITurnContext * Microsoft.Bot.Builder.NextDelegate * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="interceptionMiddleware.Microsoft.Bot.Builder.IMiddleware.OnTurnAsync (turnContext, next, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Builder.IMiddleware.OnTurnAsync(Microsoft.Bot.Builder.ITurnContext,Microsoft.Bot.Builder.NextDelegate,System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="next" Type="Microsoft.Bot.Builder.NextDelegate" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">To be added.</param>
        <param name="next">To be added.</param>
        <param name="cancellationToken">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OutboundAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task OutboundAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Schema.Activity&gt; clonedActivities, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task OutboundAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Bot.Schema.Activity&gt; clonedActivities, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.InterceptionMiddleware.OutboundAsync(Microsoft.Bot.Builder.ITurnContext,System.Collections.Generic.IEnumerable{Microsoft.Bot.Schema.Activity},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function OutboundAsync (turnContext As ITurnContext, clonedActivities As IEnumerable(Of Activity), cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member OutboundAsync : Microsoft.Bot.Builder.ITurnContext * seq&lt;Microsoft.Bot.Schema.Activity&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="interceptionMiddleware.OutboundAsync (turnContext, clonedActivities, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="clonedActivities" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Bot.Schema.Activity&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The turn context.</param>
        <param name="clonedActivities">A collection of activities.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Overriding methods implement processing of outbound activities.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TraceStateAsync">
      <MemberSignature Language="C#" Value="protected abstract System.Threading.Tasks.Task TraceStateAsync (Microsoft.Bot.Builder.ITurnContext turnContext, System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Threading.Tasks.Task TraceStateAsync(class Microsoft.Bot.Builder.ITurnContext turnContext, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Builder.InterceptionMiddleware.TraceStateAsync(Microsoft.Bot.Builder.ITurnContext,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function TraceStateAsync (turnContext As ITurnContext, cancellationToken As CancellationToken) As Task" />
      <MemberSignature Language="F#" Value="abstract member TraceStateAsync : Microsoft.Bot.Builder.ITurnContext * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="interceptionMiddleware.TraceStateAsync (turnContext, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Builder</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
        <AssemblyVersion>4.10.3.0</AssemblyVersion>
        <AssemblyVersion>4.14.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="turnContext" Type="Microsoft.Bot.Builder.ITurnContext" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="turnContext">The turn context.</param>
        <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
        <summary>
            Overriding methods implement processing of state management objects.
            </summary>
        <returns>A <see cref="T:System.Threading.Tasks.Task" /> representing the asynchronous operation.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
