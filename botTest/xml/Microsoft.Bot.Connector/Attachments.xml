<Type Name="Attachments" FullName="Microsoft.Bot.Connector.Attachments">
  <TypeSignature Language="C#" Value="public class Attachments : Microsoft.Bot.Connector.IAttachments, Microsoft.Rest.IServiceOperations&lt;Microsoft.Bot.Connector.ConnectorClient&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Attachments extends System.Object implements class Microsoft.Bot.Connector.IAttachments, class Microsoft.Rest.IServiceOperations`1&lt;class Microsoft.Bot.Connector.ConnectorClient&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Bot.Connector.Attachments" />
  <TypeSignature Language="VB.NET" Value="Public Class Attachments&#xA;Implements IAttachments, IServiceOperations(Of ConnectorClient)" />
  <TypeSignature Language="F#" Value="type Attachments = class&#xA;    interface IServiceOperations&lt;ConnectorClient&gt;&#xA;    interface IAttachments" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
    <AssemblyVersion>4.9.4.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Bot.Connector.IAttachments</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Rest.IServiceOperations&lt;Microsoft.Bot.Connector.ConnectorClient&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
            Attachments operations.
            </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Attachments (Microsoft.Bot.Connector.ConnectorClient client);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Bot.Connector.ConnectorClient client) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Attachments.#ctor(Microsoft.Bot.Connector.ConnectorClient)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (client As ConnectorClient)" />
      <MemberSignature Language="F#" Value="new Microsoft.Bot.Connector.Attachments : Microsoft.Bot.Connector.ConnectorClient -&gt; Microsoft.Bot.Connector.Attachments" Usage="new Microsoft.Bot.Connector.Attachments client" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="client" Type="Microsoft.Bot.Connector.ConnectorClient" />
      </Parameters>
      <Docs>
        <param name="client">
            Reference to the service client.
            </param>
        <summary>
            Initializes a new instance of the Attachments class.
            </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public Microsoft.Bot.Connector.ConnectorClient Client { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Bot.Connector.ConnectorClient Client" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Bot.Connector.Attachments.Client" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Client As ConnectorClient" />
      <MemberSignature Language="F#" Value="member this.Client : Microsoft.Bot.Connector.ConnectorClient" Usage="Microsoft.Bot.Connector.Attachments.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Bot.Connector.ConnectorClient</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
            Gets a reference to the ConnectorClient
            </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachmentInfoWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.AttachmentInfo&gt;&gt; GetAttachmentInfoWithHttpMessagesAsync (string attachmentId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class Microsoft.Bot.Schema.AttachmentInfo&gt;&gt; GetAttachmentInfoWithHttpMessagesAsync(string attachmentId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Attachments.GetAttachmentInfoWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachmentInfoWithHttpMessagesAsync (attachmentId As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of AttachmentInfo))" />
      <MemberSignature Language="F#" Value="abstract member GetAttachmentInfoWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.AttachmentInfo&gt;&gt;&#xA;override this.GetAttachmentInfoWithHttpMessagesAsync : string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.AttachmentInfo&gt;&gt;" Usage="attachments.GetAttachmentInfoWithHttpMessagesAsync (attachmentId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Connector.IAttachments.GetAttachmentInfoWithHttpMessagesAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;Microsoft.Bot.Schema.AttachmentInfo&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attachmentId">
            attachment id
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            GetAttachmentInfo
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Get AttachmentInfo structure describing the attachment views
            </remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
    <Member MemberName="GetAttachmentStreamAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.IO.Stream&gt; GetAttachmentStreamAsync (string attachmentId, string viewId = &quot;original&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.IO.Stream&gt; GetAttachmentStreamAsync(string attachmentId, string viewId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Attachments.GetAttachmentStreamAsync(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachmentStreamAsync (attachmentId As String, Optional viewId As String = &quot;original&quot;) As Task(Of Stream)" />
      <MemberSignature Language="F#" Value="member this.GetAttachmentStreamAsync : string * string -&gt; System.Threading.Tasks.Task&lt;System.IO.Stream&gt;" Usage="attachments.GetAttachmentStreamAsync (attachmentId, viewId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.IO.Stream&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentId" Type="System.String" />
        <Parameter Name="viewId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attachmentId">attachmentid.</param>
        <param name="viewId">view to get (default:original).</param>
        <summary>
            Get the given attachmentid view as a stream.
            </summary>
        <returns>stream of attachment.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachmentUri">
      <MemberSignature Language="C#" Value="public string GetAttachmentUri (string attachmentId, string viewId = &quot;original&quot;);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetAttachmentUri(string attachmentId, string viewId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Attachments.GetAttachmentUri(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachmentUri (attachmentId As String, Optional viewId As String = &quot;original&quot;) As String" />
      <MemberSignature Language="F#" Value="member this.GetAttachmentUri : string * string -&gt; string" Usage="attachments.GetAttachmentUri (attachmentId, viewId)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentId" Type="System.String" />
        <Parameter Name="viewId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attachmentId">id of the attachment.</param>
        <param name="viewId">default is "original".</param>
        <summary>
            Get the URI of an attachment view.
            </summary>
        <returns>uri.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachmentWithHttpMessagesAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.IO.Stream&gt;&gt; GetAttachmentWithHttpMessagesAsync (string attachmentId, string viewId, System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; customHeaders = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Threading.Tasks.Task`1&lt;class Microsoft.Rest.HttpOperationResponse`1&lt;class System.IO.Stream&gt;&gt; GetAttachmentWithHttpMessagesAsync(string attachmentId, string viewId, class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; customHeaders, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Bot.Connector.Attachments.GetAttachmentWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachmentWithHttpMessagesAsync (attachmentId As String, viewId As String, Optional customHeaders As Dictionary(Of String, List(Of String)) = Nothing, Optional cancellationToken As CancellationToken = Nothing) As Task(Of HttpOperationResponse(Of Stream))" />
      <MemberSignature Language="F#" Value="abstract member GetAttachmentWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.IO.Stream&gt;&gt;&#xA;override this.GetAttachmentWithHttpMessagesAsync : string * string * System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt; * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.IO.Stream&gt;&gt;" Usage="attachments.GetAttachmentWithHttpMessagesAsync (attachmentId, viewId, customHeaders, cancellationToken)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Bot.Connector.IAttachments.GetAttachmentWithHttpMessagesAsync(System.String,System.String,System.Collections.Generic.Dictionary{System.String,System.Collections.Generic.List{System.String}},System.Threading.CancellationToken)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Bot.Connector</AssemblyName>
        <AssemblyVersion>4.9.4.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;Microsoft.Rest.HttpOperationResponse&lt;System.IO.Stream&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attachmentId" Type="System.String" />
        <Parameter Name="viewId" Type="System.String" />
        <Parameter Name="customHeaders" Type="System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="attachmentId">
            attachment id
            </param>
        <param name="viewId">
            View id from attachmentInfo
            </param>
        <param name="customHeaders">
            Headers that will be added to request.
            </param>
        <param name="cancellationToken">
            The cancellation token.
            </param>
        <summary>
            GetAttachment
            </summary>
        <returns>To be added.</returns>
        <remarks>
            Get the named view as binary content
            </remarks>
        <exception cref="T:Microsoft.Bot.Schema.ErrorResponseException">
            Thrown when the operation returned an invalid status code
            </exception>
        <exception cref="T:Microsoft.Rest.SerializationException">
            Thrown when unable to deserialize the response
            </exception>
        <exception cref="T:Microsoft.Rest.ValidationException">
            Thrown when a required parameter is null
            </exception>
        <exception cref="T:System.ArgumentNullException">
            Thrown when a required parameter is null
            </exception>
        <return>
            A response object containing the response body and response headers.
            </return>
      </Docs>
    </Member>
  </Members>
</Type>
