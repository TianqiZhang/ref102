<Type Name="Cat&lt;T,K&gt;" FullName="CatLibrary.Cat&lt;T,K&gt;">
  <TypeSignature Language="C#" Value="public sealed class Cat&lt;T,K&gt; : CatLibrary.ICat where T : class, new() where K : struct" FrameworkAlternate="cat-1.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Cat`2&lt;class .ctor T, struct .ctor (class System.ValueType) K&gt; extends System.Object implements class CatLibrary.IAnimal, class CatLibrary.ICat" FrameworkAlternate="cat-1.0" />
  <TypeSignature Language="DocId" Value="T:CatLibrary.Cat`2" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Cat(Of T, K)&#xA;Implements ICat" FrameworkAlternate="cat-1.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T, typename K&gt;&#xA; where T : class, gcnew() where K : value classpublic ref class Cat sealed : CatLibrary::ICat" FrameworkAlternate="cat-1.0" />
  <TypeSignature Language="F#" Value="type Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; = class&#xA;    interface ICat&#xA;    interface IAnimal" />
  <TypeSignature Language="C#" Value="public class Cat&lt;T,K&gt; : CatLibrary.ICat where T : class, new() where K : struct" FrameworkAlternate="cat-2.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Cat`2&lt;class .ctor T, struct .ctor (class System.ValueType) K&gt; extends System.Object implements class CatLibrary.IAnimal, class CatLibrary.ICat" FrameworkAlternate="cat-2.0" />
  <TypeSignature Language="VB.NET" Value="Public Class Cat(Of T, K)&#xA;Implements ICat" FrameworkAlternate="cat-2.0" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T, typename K&gt;&#xA; where T : class, gcnew() where K : value classpublic ref class Cat : CatLibrary::ICat" FrameworkAlternate="cat-2.0" />
  <AssemblyInfo>
    <AssemblyName>CatLibrary</AssemblyName>
    <AssemblyVersion>1.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[CatLibrary.Doc("T is a class")]</AttributeName>
          <AttributeName Language="F#">[&lt;CatLibrary.Doc("T is a class")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="K">
      <Constraints>
        <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
        <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
        <BaseTypeName>System.ValueType</BaseTypeName>
      </Constraints>
      <Attributes>
        <Attribute FrameworkAlternate="cat-2.0">
          <AttributeName Language="C#">[CatLibrary.Doc("K is a struct")]</AttributeName>
          <AttributeName Language="F#">[&lt;CatLibrary.Doc("K is a struct")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>CatLibrary.IAnimal</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>CatLibrary.ICat</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">To be added.</typeparam>
    <typeparam name="K">To be added.</typeparam>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cat ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cat();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cat (T thisType);" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T thisType) cil managed" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.#ctor(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (thisType As T)" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cat(T thisType);" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="F#" Value="new CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; : 'T -&gt; CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;" Usage="new CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; thisType" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="C#" Value="public Cat (T ownType);" FrameworkAlternate="cat-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T ownType) cil managed" FrameworkAlternate="cat-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownType As T)" FrameworkAlternate="cat-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cat(T ownType);" FrameworkAlternate="cat-2.0" />
      <MemberSignature Language="F#" Value="new CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; : 'T -&gt; CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;" Usage="new CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; ownType" FrameworkAlternate="cat-2.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="thisType" Type="T" Index="0" FrameworkAlternate="cat-1.0" />
        <Parameter Name="ownType" Type="T" Index="0" FrameworkAlternate="cat-2.0" />
      </Parameters>
      <Docs>
        <param name="thisType">To be added.</param>
        <param name="ownType">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Cat (string nickName, out int ageNumber, string realName, bool isHealthy);" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string nickName, [out] int32&amp; ageNumber, [out] string realName, [in]bool isHealthy) cil managed" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.#ctor(System.String,System.Int32@,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nickName As String, ByRef ageNumber As Integer, realName As String, isHealthy As Boolean)" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cat(System::String ^ nickName, [Runtime::InteropServices::Out] int % ageNumber, System::String ^ realName, bool isHealthy);" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="F#" Value="new CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; : string * int * string * bool -&gt; CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;" Usage="new CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; (nickName, ageNumber, realName, isHealthy)" FrameworkAlternate="cat-1.0" />
      <MemberSignature Language="C#" Value="public Cat (string nickName, out int age, string realName, bool isHealthy);" FrameworkAlternate="cat-2.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string nickName, [out] int32&amp; age, [out] string realName, [in]bool isHealthy) cil managed" FrameworkAlternate="cat-2.0" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nickName As String, ByRef age As Integer, realName As String, isHealthy As Boolean)" FrameworkAlternate="cat-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Cat(System::String ^ nickName, [Runtime::InteropServices::Out] int % age, System::String ^ realName, bool isHealthy);" FrameworkAlternate="cat-2.0" />
      <MemberSignature Language="F#" Value="new CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; : string * int * string * bool -&gt; CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;" Usage="new CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; (nickName, age, realName, isHealthy)" FrameworkAlternate="cat-2.0" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nickName" Type="System.String" Index="0" />
        <Parameter Name="ageNumber" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="cat-1.0" />
        <Parameter Name="age" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="cat-2.0" />
        <Parameter Name="realName" Type="System.String" Index="2" />
        <Parameter Name="isHealthy" Type="System.Boolean" Index="3" />
      </Parameters>
      <Docs>
        <param name="nickName">To be added.</param>
        <param name="ageNumber">To be added.</param>
        <param name="age">To be added.</param>
        <param name="realName">To be added.</param>
        <param name="isHealthy">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Age">
      <MemberSignature Language="C#" Value="protected int Age { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Age" />
      <MemberSignature Language="DocId" Value="P:CatLibrary.Cat`2.Age" />
      <MemberSignature Language="VB.NET" Value="Protected Property Age As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int Age { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Age : int with get, set" Usage="CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;.Age" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CalculateFood">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.Dictionary&lt;string,System.Collections.Generic.List&lt;int&gt;&gt; CalculateFood (DateTime date);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Collections.Generic.List`1&lt;int32&gt;&gt; CalculateFood(valuetype System.DateTime date) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.CalculateFood(System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Function CalculateFood (date As DateTime) As Dictionary(Of String, List(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::Dictionary&lt;System::String ^, System::Collections::Generic::List&lt;int&gt; ^&gt; ^ CalculateFood(DateTime date);" />
      <MemberSignature Language="F#" Value="member this.CalculateFood : DateTime -&gt; System.Collections.Generic.Dictionary&lt;string, System.Collections.Generic.List&lt;int&gt;&gt;" Usage="cat.CalculateFood date" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Collections.Generic.List&lt;System.Int32&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="date" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="date">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchJerry">
      <MemberSignature Language="C#" Value="public void CatchJerry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CatchJerry() cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.CatchJerry" />
      <MemberSignature Language="VB.NET" Value="Public Sub CatchJerry ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CatchJerry();" />
      <MemberSignature Language="F#" Value="abstract member CatchJerry : unit -&gt; unit&#xA;override this.CatchJerry : unit -&gt; unit" Usage="cat.CatchJerry " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CatLibrary.ICat.CatchJerry</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchJerry">
      <MemberSignature Language="C#" Value="public void CatchJerry (bool force);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CatchJerry(bool force) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.CatchJerry(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CatchJerry (force As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CatchJerry(bool force);" />
      <MemberSignature Language="F#" Value="member this.CatchJerry : bool -&gt; unit" Usage="cat.CatchJerry force" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="cat-2.0">
          <AttributeName Language="C#">[System.Obsolete("hi,mark CatchJerry(bool force) as obsolete for testing", true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("hi,mark CatchJerry(bool force) as obsolete for testing", true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="force" Type="System.Boolean" Index="0" FrameworkAlternate="cat-2.0" />
      </Parameters>
      <Docs>
        <param name="force">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatLibrary.IAnimal.Eat">
      <MemberSignature Language="C#" Value="void IAnimal.Eat ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void CatLibrary.IAnimal.Eat() cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.CatLibrary#IAnimal#Eat" />
      <MemberSignature Language="VB.NET" Value="Sub Eat () Implements IAnimal.Eat" />
      <MemberSignature Language="C++ CLI" Value=" virtual void CatLibrary.IAnimal.Eat() = CatLibrary::IAnimal::Eat;" />
      <MemberSignature Language="F#" Value="abstract member CatLibrary.IAnimal.Eat : unit -&gt; unit&#xA;override this.CatLibrary.IAnimal.Eat : unit -&gt; unit" Usage="cat.CatLibrary.IAnimal.Eat " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CatLibrary.IAnimal.Eat</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatLibrary.IAnimal.Eat">
      <MemberSignature Language="C#" Value="void IAnimal.Eat (string food);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void CatLibrary.IAnimal.Eat(string food) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.CatLibrary#IAnimal#Eat(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub Eat (food As String) Implements IAnimal.Eat" />
      <MemberSignature Language="C++ CLI" Value=" virtual void CatLibrary.IAnimal.Eat(System::String ^ food) = CatLibrary::IAnimal::Eat;" />
      <MemberSignature Language="F#" Value="abstract member CatLibrary.IAnimal.Eat : string -&gt; unit&#xA;override this.CatLibrary.IAnimal.Eat : string -&gt; unit" Usage="cat.CatLibrary.IAnimal.Eat food" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CatLibrary.IAnimal.Eat(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="food" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="food">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatLibrary.IAnimal.Eat&lt;Tool&gt;">
      <MemberSignature Language="C#" Value="void IAnimal.Eat&lt;Tool&gt; (Tool a) where Tool : class;" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void CatLibrary.IAnimal.Eat&lt;class Tool&gt;(!!Tool a) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.CatLibrary#IAnimal#Eat``1(``0)" />
      <MemberSignature Language="VB.NET" Value="Sub Eat(Of Tool As Class) (a As Tool) Implements IAnimal.Eat" />
      <MemberSignature Language="C++ CLI" Value="generic &lt;typename Tool&gt;&#xA; where Tool : class virtual void CatLibrary.IAnimal.Eat(Tool a) = CatLibrary::IAnimal::Eat;" />
      <MemberSignature Language="F#" Value="abstract member CatLibrary.IAnimal.Eat : 'ool -&gt; unit (requires 'ool : null)&#xA;override this.CatLibrary.IAnimal.Eat : 'ool -&gt; unit (requires 'ool : null)" Usage="cat.CatLibrary.IAnimal.Eat a" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:CatLibrary.IAnimal.Eat``1(``0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="Tool">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="a" Type="Tool" />
      </Parameters>
      <Docs>
        <typeparam name="Tool">To be added.</typeparam>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatLibrary.IAnimal.Item">
      <MemberSignature Language="C#" Value="string CatLibrary.IAnimal.Item[int a] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatLibrary.IAnimal.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:CatLibrary.Cat`2.CatLibrary#IAnimal#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(a As Integer) As String Implements IAnimal.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ CatLibrary::IAnimal::Item[int] { System::String ^ get(int a); };" />
      <MemberSignature Language="F#" Value="member this.CatLibrary.IAnimal.Item(int) : string" Usage="CatLibrary.IAnimal.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:CatLibrary.IAnimal.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatLibrary.ICat.eat">
      <MemberSignature Language="C#" Value="event EventHandler CatLibrary.ICat.eat;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CatLibrary.ICat.eat" />
      <MemberSignature Language="DocId" Value="E:CatLibrary.Cat`2.CatLibrary#ICat#eat" />
      <MemberSignature Language="VB.NET" Value="Custom Event eat As EventHandler Implements CatLibrary.ICat" />
      <MemberSignature Language="F#" Value="member this.CatLibrary.ICat.eat : EventHandler " Usage="member this.CatLibrary.ICat.eat : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:CatLibrary.ICat.eat</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="cat.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTailLength">
      <MemberSignature Language="C#" Value="public long GetTailLength (int* catName, params object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetTailLength(int32* catName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.GetTailLength(System.Int32*,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetTailLength(int* catName, ... cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.GetTailLength : nativeptr&lt;int&gt; * obj[] -&gt; int64" Usage="cat.GetTailLength (catName, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catName" Type="System.Int32*" />
        <Parameter Name="parameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="cat-1.0">
              <AttributeName Language="C#">[System.ParamArray]</AttributeName>
              <AttributeName Language="F#">[&lt;System.ParamArray&gt;]</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="catName">To be added.</param>
        <param name="parameters">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="isHealthy">
      <MemberSignature Language="C#" Value="public bool isHealthy;" />
      <MemberSignature Language="ILAsm" Value=".field public bool isHealthy" />
      <MemberSignature Language="DocId" Value="F:CatLibrary.Cat`2.isHealthy" />
      <MemberSignature Language="VB.NET" Value="Public isHealthy As Boolean " />
      <MemberSignature Language="C++ CLI" Value="public: bool isHealthy;" />
      <MemberSignature Language="F#" Value="val mutable isHealthy : bool" Usage="CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;.isHealthy" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ContextStatic]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ContextStatic&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="cat-2.0">
          <AttributeName Language="C#">[System.Obsolete("mark IsHealthy as obsolete for testing")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("mark IsHealthy as obsolete for testing")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public int this[string a] { protected get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Item(string)" />
      <MemberSignature Language="DocId" Value="P:CatLibrary.Cat`2.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(a As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:  property int default[System::String ^] {  protected:&#xA;int get(System::String ^ a); public:&#xA; void set(System::String ^ a, int value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : int with get, set" Usage="CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="a">To be added.</param>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Jump">
      <MemberSignature Language="C#" Value="public void Jump (T ownType, K anotherOwnType, ref bool cheat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Jump(!T ownType, !K anotherOwnType, bool&amp; cheat) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.Jump(`0,`1,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Jump (ownType As T, anotherOwnType As K, ByRef cheat As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Jump(T ownType, K anotherOwnType, bool % cheat);" />
      <MemberSignature Language="F#" Value="member this.Jump : 'T * 'K * bool -&gt; unit" Usage="cat.Jump (ownType, anotherOwnType, cheat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Diagnostics.Conditional("Debug")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Diagnostics.Conditional("Debug")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ownType" Type="T" />
        <Parameter Name="anotherOwnType" Type="K" />
        <Parameter Name="cheat" Type="System.Boolean" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="ownType">To be added.</param>
        <param name="anotherOwnType">To be added.</param>
        <param name="cheat">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:CatLibrary.Cat`2.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:CatLibrary.IAnimal.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="cat-2.0">
          <AttributeName Language="C#">[System.Obsolete("hi,mark Name as obsolete for testing")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("hi,mark Name as obsolete for testing")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static int operator + (CatLibrary.Cat&lt;T,K&gt; lsr, int rsr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Addition(class CatLibrary.Cat`2&lt;!T, !K&gt; lsr, int32 rsr) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.op_Addition(CatLibrary.Cat{`0,`1},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (lsr As Cat(Of T, K), rsr As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int operator +(CatLibrary::Cat&lt;T, K&gt; ^ lsr, int rsr);" />
      <MemberSignature Language="F#" Value="static member ( + ) : CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; * int -&gt; int" Usage="lsr + rsr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lsr" Type="CatLibrary.Cat&lt;T,K&gt;" />
        <Parameter Name="rsr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lsr">To be added.</param>
        <param name="rsr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator CatLibrary.Tom (CatLibrary.Cat&lt;T,K&gt; src);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class CatLibrary.Tom op_Explicit(class CatLibrary.Cat`2&lt;!T, !K&gt; src) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.op_Explicit(CatLibrary.Cat{`0,`1})~CatLibrary.Tom" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (src As Cat(Of T, K)) As Tom" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator CatLibrary::Tom ^(CatLibrary::Cat&lt;T, K&gt; ^ src);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; -&gt; CatLibrary.Tom" Usage="CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt;.op_Explicit src" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>CatLibrary.Tom</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="src" Type="CatLibrary.Cat&lt;T,K&gt;" />
      </Parameters>
      <Docs>
        <param name="src">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Subtraction">
      <MemberSignature Language="C#" Value="public static int operator - (CatLibrary.Cat&lt;T,K&gt; lsr, int rsr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname int32 op_Subtraction(class CatLibrary.Cat`2&lt;!T, !K&gt; lsr, int32 rsr) cil managed" />
      <MemberSignature Language="DocId" Value="M:CatLibrary.Cat`2.op_Subtraction(CatLibrary.Cat{`0,`1},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator - (lsr As Cat(Of T, K), rsr As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int operator -(CatLibrary::Cat&lt;T, K&gt; ^ lsr, int rsr);" />
      <MemberSignature Language="F#" Value="static member ( - ) : CatLibrary.Cat&lt;'T, 'K (requires 'T : null and 'T : (new : unit -&gt; 'T) and 'K : struct)&gt; * int -&gt; int" Usage="lsr - rsr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lsr" Type="CatLibrary.Cat&lt;T,K&gt;" />
        <Parameter Name="rsr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lsr">To be added.</param>
        <param name="rsr">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ownEat">
      <MemberSignature Language="C#" Value="public event EventHandler ownEat;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ownEat" />
      <MemberSignature Language="DocId" Value="E:CatLibrary.Cat`2.ownEat" />
      <MemberSignature Language="VB.NET" Value="Public Event ownEat As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ownEat;" />
      <MemberSignature Language="F#" Value="member this.ownEat : EventHandler " Usage="member this.ownEat : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>CatLibrary</AssemblyName>
        <AssemblyVersion>1.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
